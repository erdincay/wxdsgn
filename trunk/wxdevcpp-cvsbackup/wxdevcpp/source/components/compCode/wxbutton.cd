[MAININFO$]
CCVer=4.0
Compatible20=0
Compatible21=0
Compatible22=0
Compatible25=0
Compatible30=0
Compatible40=1
Lang=Pasc
UnitName=Wx
LimitName=0
NewClassName=TWxButton
ParentClassName=TButton,IWxComponentInterface
VCLAncestorName=TButton
DefaultPalette=wxWidgets
CopyrightLine=Copyright © 2003 by Guru Kathiresan
TargetDir=e:\
FormMode=0
FormFile=
[UNITS$]
Lines=12
L1=WinTypes
L2=WinProcs
L3=Messages
L4=SysUtils
L5=Classes
L6=Controls
L7=Forms
L8=Graphics
L9=Stdctrls
L10=Wxutils
L11=ExtCtrls
L12=WxSizerPanel
[ITEMLIST$]
Create=Method
Destroy=Method
EVT_BUTTON=Property
EVT_UPDATE_UI=Property
FWx_PropertyList=Variable
GenerateControlIDs:String=Method
GenerateEventTableEntries=Method
GenerateGUIControlCreation:String=Method
GenerateGUIControlDeclaration:String=Method
GenerateHeaderInclude:String=Method
GetEventList:TStringlist=Method
GetIDName:String=Method
GetIDValue:LongInt=Method
GetParameterFromEventName=Method
GetPropertyList:TStringList=Method
GetTypeFromEventName=Method
GetWxClassName:String=Method
OnClick=ExistingEvent
OnDblClick=ExistingEvent
OnDragDrop=ExistingEvent
OnMouseDown=ExistingEvent
OnMouseMove=ExistingEvent
OnMouseUp=ExistingEvent
SaveControlOrientation=Method
SetIDName=Method
SetIDValue=Method
SetWxClassName=Method
Wx_BKColor=Property
Wx_Border=Property
Wx_ButtonStyle=Property
Wx_Class=Property
Wx_ControlOrientation=Property
Wx_Default=Property
Wx_Enabled=Property
Wx_EventList=Property
Wx_GeneralStyle=Property
Wx_HelpText=Property
Wx_Hidden=Property
Wx_HorizontalAlignment=Property
Wx_IDName=Property
Wx_IDValue=Property
Wx_StrechFactor=Property
Wx_ToolTip=Property
Wx_VerticalAlignment=Property
GenerateImageInclude:=Method
Wx_ProxyBKColorString=Property
Wx_ProxyFGColorString=Property
Wx_FGColor=Property
Wx_StretchFactor=Property
GetStretchFactor:Integer;=Method
SetStretchFactor=Method
[GLOBAL$]
Descr=
DefaultCode=1
Keywords=
[CODE$]
Lines=9
L1={
L2=*************IMPORTANT*************
L3=If you want to change any of the wxwidgets components,  you have to use comp screate by David Price.
L4=You can download a copy from
L5=
L6=http://torry.net/tools/components/compcreation/cc.zip
L7=
L8=***IF YOU FOLLOW THIS YOUR UPDATES WONT BE INCLUDED IN THE DISTRIBUTION****
L9=}
[HELP$]
Lines=0
[IMPGLOBAL$]
Descr=
DefaultCode=1
Keywords=
[IMPGLOBAL$CODE$]
Lines=0
[IMPGLOBAL$HELP$]
Lines=0
[Create]
Descr=
DefaultCode=2
Keywords=
Kind=2
Header=Create(AOwner: TComponent)
S=0
Ov=1
Mode=2
WinMessage=
[CreateCODE$]
Lines=63
L1=begin
L2=~~~~~{ Call the Create method of the parent class }
L3=~~~~~inherited Create(AOwner);
L4=
L5=~~~~~{ AutoInitialize sets the initial values of variables and      }
L6=~~~~~{ properties; also, it creates objects for properties of       }
L7=~~~~~{ standard Delphi object types (e.g., TFont, TTimer,           }
L8=~~~~~{ TPicture) and for any variables marked as objects.           }
L9=~~~~~{ AutoInitialize method is generated by Component Create.      }
L10=~~~~~AutoInitialize;
L11=
L12=~~~~~{ Code to perform other tasks when the component is created }
L13=
L14=~~~~~FWx_PropertyList.add('Wx_BKColor:Wx_BKColor');
L15=~~~~~FWx_PropertyList.add('wx_Class:Base Class');
L16=~~~~~FWx_PropertyList.add('Wx_Hidden :Hidden');
L17=~~~~~FWx_PropertyList.add('Wx_Border : Border ');
L18=~~~~~FWx_PropertyList.add('Wx_FGColor :FGColor ');
L19=~~~~~FWx_PropertyList.add('Wx_HelpText :HelpText ');
L20=~~~~~FWx_PropertyList.add('Wx_IDName : IDName ');
L21=~~~~~FWx_PropertyList.add('Wx_IDValue : IDValue ');
L22=~~~~~FWx_PropertyList.add('Wx_ToolTip :ToolTip ');
L23=~~~~~FWx_PropertyList.add('Caption : Label');
L24=~~~~~FWx_PropertyList.add('Name : Name');
L25=~~~~~FWx_PropertyList.add('Left : Left');
L26=~~~~~FWx_PropertyList.add('Top : Top');
L27=~~~~~FWx_PropertyList.add('Width : Width');
L28=~~~~~FWx_PropertyList.add('Height:Height');
L29=
L30=~~~~~FWx_PropertyList.add('Wx_BGColor:Background Color');
L31=~~~~~FWx_PropertyList.add('Wx_FGColor:Foreground Color');
L32=
L33=~~~~~FWx_PropertyList.add('Wx_GeneralStyle: General Styles');
L34=~~~~~FWx_PropertyList.Add('wxSIMPLE_BORDER:wxSIMPLE_BORDER');
L35=~~~~~FWx_PropertyList.Add('wxDOUBLE_BORDER:wxDOUBLE_BORDER');
L36=~~~~~FWx_PropertyList.Add('wxSUNKEN_BORDER:wxSUNKEN_BORDER');
L37=~~~~~FWx_PropertyList.Add('wxRAISED_BORDER:wxRAISED_BORDER');
L38=~~~~~FWx_PropertyList.Add('wxSTATIC_BORDER:wxSTATIC_BORDER');
L39=~~~~~FWx_PropertyList.Add('wxTRANSPARENT_WINDOW:wxTRANSPARENT_WINDOW');
L40=~~~~~FWx_PropertyList.Add('wxNO_3D:wxNO_3D');
L41=~~~~~FWx_PropertyList.Add('wxTAB_TRAVERSAL:wxTAB_TRAVERSAL');
L42=~~~~~FWx_PropertyList.Add('wxWANTS_CHARS:wxWANTS_CHARS');
L43=~~~~~FWx_PropertyList.Add('wxNO_FULL_REPAINT_ON_RESIZE:wxNO_FULL_REPAINT_ON_RESIZE');
L44=~~~~~FWx_PropertyList.Add('wxVSCROLL:wxVSCROLL');
L45=~~~~~FWx_PropertyList.Add('wxHSCROLL:wxHSCROLL');
L46=~~~~~FWx_PropertyList.Add('wxCLIP_CHILDREN:wxCLIP_CHILDREN');
L47=
L48=~~~~~FWx_PropertyList.add('Font : Font');
L49=
L50=~~~~~FWx_PropertyList.add('Wx_ButtonStyle:Button Style');
L51=~~~~~FWx_PropertyList.add('wxBU_LEFT:wxBU_LEFT');
L52=~~~~~FWx_PropertyList.add('wxBU_TOP:wxBU_TOP');
L53=~~~~~FWx_PropertyList.add('wxBU_RIGHT:wxBU_RIGHT');
L54=~~~~~FWx_PropertyList.add('wxBU_BOTTOM:wxBU_BOTTOM');
L55=~~~~~FWx_PropertyList.add('wxBU_EXACTFIT:wxBU_EXACTFIT');
L56=
L57=~~~~~FWx_PropertyList.add('Wx_HorizontalAlignment : HorizontalAlignment');
L58=~~~~~FWx_PropertyList.add('Wx_VerticalAlignment   : VerticalAlignment');
L59=
L60=~~~~~FWx_EventList.add('EVT_BUTTON:OnClick');
L61=~~~~~FWx_EventList.add('EVT_UPDATE_UI:OnUpdateUI');
L62=
L63=end;
[CreateHELP$]
Lines=0
[Destroy]
Descr=
DefaultCode=4
Keywords=
Kind=3
Header=Destroy
S=0
Ov=1
Mode=2
WinMessage=
[DestroyCODE$]
Lines=13
L1=begin
L2=~~~~~{ AutoDestroy, which is generated by Component Create, frees any   }
L3=~~~~~{ objects created by AutoInitialize.                               }
L4=~~~~~AutoDestroy;
L5=
L6=~~~~~{ Here, free any other dynamic objects that the component methods  }
L7=~~~~~{ created but have not yet freed.  Also perform any other clean-up }
L8=~~~~~{ operations needed before the component is destroyed.             }
L9=
L10=~~~~~{ Last, free the component by calling the Destroy method of the    }
L11=~~~~~{ parent class.                                                    }
L12=~~~~~inherited Destroy;
L13=end;
[DestroyHELP$]
Lines=0
[EVT_BUTTON]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_BUTTONCODE$]
Lines=0
[EVT_BUTTONHELP$]
Lines=0
[EVT_UPDATE_UI]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_UPDATE_UICODE$]
Lines=0
[EVT_UPDATE_UIHELP$]
Lines=0
[FWx_PropertyList]
Descr=
DefaultCode=17
Keywords=
DataType=TStringList
Default=
Quote=0
Sc=10
IsObject=1
IsSubComponent=0
[FWx_PropertyListCODE$]
Lines=0
[FWx_PropertyListHELP$]
Lines=0
[GenerateControlIDs:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateControlIDs:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateControlIDs:StringCODE$]
Lines=10
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=~~~~~if (Wx_IDValue > 0) and (trim(Wx_IDName) <> '') then
L9=~~~~~~~~Result:=Format('#define %s %d ',[Wx_IDName,Wx_IDValue]);
L10=end;
[GenerateControlIDs:StringHELP$]
Lines=0
[GenerateEventTableEntries]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateEventTableEntries(CurrClassName:String):String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateEventTableEntriesCODE$]
Lines=16
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=begin
L5=~~~~~Result:='';
L6=~~~~~if trim(EVT_BUTTON) <> '' then
L7=~~~~~begin
L8=~~~~~~~~~~Result:=Format('EVT_BUTTON(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_BUTTON]) +'';
L9=~~~~~end;
L10=
L11=~~~~~if trim(EVT_UPDATE_UI) <> '' then
L12=~~~~~begin
L13=~~~~~~~~~~Result:=Result+#13+Format('EVT_UPDATE_UI(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_UPDATE_UI]) +'';
L14=~~~~~end;
L15=
L16=end;
[GenerateEventTableEntriesHELP$]
Lines=0
[GenerateGUIControlCreation:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateGUIControlCreation:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateGUIControlCreation:StringCODE$]
Lines=45
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=var
L5=~~~~~strStyle:String;
L6=~~~~~parentName,strAlignment:String;
L7=begin
L8=~~~~Result:='';
L9=~~~~strStyle:=GetButtonSpecificStyle(self.Wx_GeneralStyle,Wx_ButtonStyle);
L10=
L11=
L12=~~~~if (self.Parent is TForm) or (self.Parent is TWxSizerPanel) then
L13=~~~~~~~parentName:='this'
L14=~~~~else
L15=~~~~~~~parentName:=self.Parent.name;
L16=
L17=~~~~Result:=Format('%s =  new %s(%s, %s, _("%s") , wxPoint(%d,%d),wxSize(%d,%d) %s);',[self.Name,self.wx_Class,parentName,GetWxIDString(self.Wx_IDName,self.Wx_IDValue),self.Text,self.Left,self.Top,self.width,self.Height,strStyle] );
L18=
L19=~~~~if trim(self.Wx_ToolTip) <> '' then
L20=~~~~~~~~Result:=Result + #13+Format('%s->SetToolTip(wxT("%s"));',[self.Name,self.Wx_ToolTip]);
L21=
L22=~~~~if self.Wx_Hidden then
L23=~~~~~~~~Result:=Result + #13+Format('%s->Show(false);',[self.Name]);
L24=
L25=~~~~if not Wx_Enabled then
L26=~~~~~~~~Result:=Result + #13+Format('%s->Enable(false);',[self.Name]);
L27=
L28=~~~~if trim(self.Wx_HelpText) <> '' then
L29=~~~~~~~~Result:=Result +#13+Format('%s->SetHelpText(_("%s"));',[self.Name,self.Wx_HelpText]);
L30=
L31=~~~~if(self.Parent is TWxSizerPanel) then
L32=~~~~begin
L33=
L34=~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_HorizontalAlignment) + ' | '+ SizerAlignmentToStr(Wx_VerticalAlignment) +' | wxALL';
L35=~~~~~~~~if wx_ControlOrientation = wxControlVertical then
L36=~~~~~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_HorizontalAlignment)+ ' | wxALL';
L37=
L38=~~~~~~~~~if wx_ControlOrientation = wxControlHorizontal then
L39=~~~~~~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_VerticalAlignment)+ ' | wxALL';
L40=
L41=~~~~~~~~~Result:=Result +#13+Format('%s->Add(%s,%d,%s,%d);',[self.Parent.Name,self.Name,self.Wx_StrechFactor,strAlignment,self.Wx_Border]);
L42=
L43=~~~~end;
L44=
L45=end;
[GenerateGUIControlCreation:StringHELP$]
Lines=0
[GenerateGUIControlDeclaration:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateGUIControlDeclaration:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateGUIControlDeclaration:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=Format('%s *%s;',[trim(Self.Wx_Class),trim(Self.Name)]);
L8=end;
[GenerateGUIControlDeclaration:StringHELP$]
Lines=0
[GenerateHeaderInclude:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateHeaderInclude:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateHeaderInclude:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=Result:='#include<wx/button.h>';
L8=end;
[GenerateHeaderInclude:StringHELP$]
Lines=0
[GetEventList:TStringlist]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetEventList:TStringlist
S=0
Ov=0
Mode=2
WinMessage=
[GetEventList:TStringlistCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=Wx_EventList;
L8=end;
[GetEventList:TStringlistHELP$]
Lines=0
[GetIDName:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetIDName:String
S=0
Ov=0
Mode=2
WinMessage=
[GetIDName:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_IDName;
L8=end;
[GetIDName:StringHELP$]
Lines=0
[GetIDValue:LongInt]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetIDValue:LongInt
S=0
Ov=0
Mode=2
WinMessage=
[GetIDValue:LongIntCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_IDValue;
L8=end;
[GetIDValue:LongIntHELP$]
Lines=0
[GetParameterFromEventName]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetParameterFromEventName(EventName: string):String
S=0
Ov=0
Mode=2
WinMessage=
[GetParameterFromEventNameCODE$]
Lines=17
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=if EventName = 'EVT_BUTTON' then
L8=begin
L9=~Result:='wxCommandEvent& event';
L10=~exit;
L11=end;
L12=if EventName = 'EVT_UPDATE_UI' then
L13=begin
L14=~Result:='wxUpdateUIEvent& event';
L15=~exit;
L16=end;
L17=end;
[GetParameterFromEventNameHELP$]
Lines=0
[GetPropertyList:TStringList]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetPropertyList:TStringList
S=0
Ov=0
Mode=2
WinMessage=
[GetPropertyList:TStringListCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=FWx_PropertyList;
L8=end;
[GetPropertyList:TStringListHELP$]
Lines=0
[GetTypeFromEventName]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetTypeFromEventName(EventName: string):string
S=0
Ov=0
Mode=2
WinMessage=
[GetTypeFromEventNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=
L8=end;
[GetTypeFromEventNameHELP$]
Lines=0
[GetWxClassName:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetWxClassName:String
S=0
Ov=0
Mode=2
WinMessage=
[GetWxClassName:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_Class;
L8=end;
[GetWxClassName:StringHELP$]
Lines=0
[OnClick]
Descr=
DefaultCode=7
Keywords=
Ov=1
P=1
HandlerDecl=Click
[OnClickCODE$]
Lines=11
L1=begin
L2=~~~~~{ Code to execute before activating click
L3=~~~~~~~behavior of component's parent class }
L4=
L5=~~~~~{ Activate click behavior of parent }
L6=~~~~~inherited Click;
L7=
L8=~~~~~{ Code to execute after click behavior
L9=~~~~~~~of parent }
L10=
L11=end;
[OnClickHELP$]
Lines=0
[OnDblClick]
Descr=
DefaultCode=8
Keywords=
Ov=0
P=1
HandlerDecl=DblClick
[OnDblClickCODE$]
Lines=0
[OnDblClickHELP$]
Lines=0
[OnDragDrop]
Descr=
DefaultCode=13
Keywords=
Ov=0
P=1
HandlerDecl=DragDrop(DragObject: TObject; X, Y: Integer)
[OnDragDropCODE$]
Lines=0
[OnDragDropHELP$]
Lines=0
[OnMouseDown]
Descr=
DefaultCode=13
Keywords=
Ov=0
P=1
HandlerDecl=MouseDown(Button: TMouseButton; Shift: TShiftState; X, Y: Integer)
[OnMouseDownCODE$]
Lines=0
[OnMouseDownHELP$]
Lines=0
[OnMouseMove]
Descr=
DefaultCode=13
Keywords=
Ov=0
P=1
HandlerDecl=MouseMove(Shift: TShiftState; X, Y: Integer)
[OnMouseMoveCODE$]
Lines=0
[OnMouseMoveHELP$]
Lines=0
[OnMouseUp]
Descr=
DefaultCode=13
Keywords=
Ov=0
P=1
HandlerDecl=MouseUp(Button: TMouseButton; Shift: TShiftState; X, Y: Integer)
[OnMouseUpCODE$]
Lines=0
[OnMouseUpHELP$]
Lines=0
[SaveControlOrientation]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SaveControlOrientation(ControlOrientation:TWxControlOrientation)
S=0
Ov=0
Mode=2
WinMessage=
[SaveControlOrientationCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=wx_ControlOrientation:=ControlOrientation;
L8=end;
[SaveControlOrientationHELP$]
Lines=0
[SetIDName]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetIDName(IDName:String)
S=0
Ov=0
Mode=2
WinMessage=
[SetIDNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_IDName:=IDName;
L8=end;
[SetIDNameHELP$]
Lines=0
[SetIDValue]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetIDValue(IDValue:longInt)
S=0
Ov=0
Mode=2
WinMessage=
[SetIDValueCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Wx_IDValue:=IDVAlue;
L8=end;
[SetIDValueHELP$]
Lines=0
[SetWxClassName]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetWxClassName(wxClassName:String)
S=0
Ov=0
Mode=2
WinMessage=
[SetWxClassNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_Class:=wxClassName;
L8=end;
[SetWxClassNameHELP$]
Lines=0
[Wx_BKColor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TColor
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_BKColorCODE$]
Lines=0
[Wx_BKColorHELP$]
Lines=0
[Wx_Border]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=5
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_BorderCODE$]
Lines=0
[Wx_BorderHELP$]
Lines=0
[Wx_ButtonStyle]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxBtnStyleSet
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ButtonStyleCODE$]
Lines=0
[Wx_ButtonStyleHELP$]
Lines=0
[Wx_Class]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault='wxButton'
Quote=1
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ClassCODE$]
Lines=0
[Wx_ClassHELP$]
Lines=0
[Wx_ControlOrientation]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxControlOrientation
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ControlOrientationCODE$]
Lines=0
[Wx_ControlOrientationHELP$]
Lines=0
[Wx_Default]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_DefaultCODE$]
Lines=0
[Wx_DefaultHELP$]
Lines=0
[Wx_Enabled]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=True
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_EnabledCODE$]
Lines=0
[Wx_EnabledHELP$]
Lines=0
[Wx_EventList]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TstringList
PropDefault=
Quote=0
RM=0
WM=1
VIRT=0
Hide=0
SP=2
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_EventListCODE$]
Lines=5
L1=begin
L2=~~~~~{ Use Assign method because TstringList is an object type
L3=~~~~~~~and FWx_EventList has been created. }
L4=~~~~~FWx_EventList.Assign(Value);
L5=end;
[Wx_EventListHELP$]
Lines=0
[Wx_GeneralStyle]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxStdStyleSet
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_GeneralStyleCODE$]
Lines=0
[Wx_GeneralStyleHELP$]
Lines=0
[Wx_HelpText]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HelpTextCODE$]
Lines=0
[Wx_HelpTextHELP$]
Lines=0
[Wx_Hidden]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HiddenCODE$]
Lines=0
[Wx_HiddenHELP$]
Lines=0
[Wx_HorizontalAlignment]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxSizerHorizontalAlignment
PropDefault=wxSZALIGN_CENTER_HORIZONTAL
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HorizontalAlignmentCODE$]
Lines=0
[Wx_HorizontalAlignmentHELP$]
Lines=0
[Wx_IDName]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_IDNameCODE$]
Lines=0
[Wx_IDNameHELP$]
Lines=0
[Wx_IDValue]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Longint
PropDefault=-1
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_IDValueCODE$]
Lines=0
[Wx_IDValueHELP$]
Lines=0
[Wx_StrechFactor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_StrechFactorCODE$]
Lines=0
[Wx_StrechFactorHELP$]
Lines=0
[Wx_ToolTip]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ToolTipCODE$]
Lines=0
[Wx_ToolTipHELP$]
Lines=0
[Wx_VerticalAlignment]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxSizerVerticalAlignment
PropDefault=wxSZALIGN_CENTER_VERTICAL
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_VerticalAlignmentCODE$]
Lines=0
[Wx_VerticalAlignmentHELP$]
Lines=0
[GenerateImageInclude:]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateImageInclude: string
S=0
Ov=0
Mode=2
WinMessage=
[GenerateImageInclude:CODE$]
Lines=0
[GenerateImageInclude:HELP$]
Lines=0
[Wx_ProxyBKColorString]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxColorString
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ProxyBKColorStringCODE$]
Lines=0
[Wx_ProxyBKColorStringHELP$]
Lines=0
[Wx_ProxyFGColorString]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxColorString
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ProxyFGColorStringCODE$]
Lines=0
[Wx_ProxyFGColorStringHELP$]
Lines=0
[Wx_FGColor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TwxColorstring
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_FGColorCODE$]
Lines=0
[Wx_FGColorHELP$]
Lines=0
[Wx_StretchFactor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=0
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_StretchFactorCODE$]
Lines=0
[Wx_StretchFactorHELP$]
Lines=0
[GetStretchFactor:Integer;]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetStretchFactor:Integer;
S=0
Ov=0
Mode=2
WinMessage=
[GetStretchFactor:Integer;CODE$]
Lines=0
[GetStretchFactor:Integer;HELP$]
Lines=0
[SetStretchFactor]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetStretchFactor(intValue:Integer);
S=0
Ov=0
Mode=2
WinMessage=
[SetStretchFactorCODE$]
Lines=0
[SetStretchFactorHELP$]
Lines=0
