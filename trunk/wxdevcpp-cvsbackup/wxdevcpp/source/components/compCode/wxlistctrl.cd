[MAININFO$]
CCVer=4.0
Compatible20=0
Compatible21=0
Compatible22=0
Compatible25=0
Compatible30=0
Compatible40=1
Lang=Pasc
UnitName=Wxlistctrl
LimitName=0
NewClassName=TWxListCtrl
ParentClassName=TListView,IWxComponentInterface
VCLAncestorName=TListView
DefaultPalette=wxWidgets
CopyrightLine=Copyright © 2003 by Guru Kathiresan
TargetDir=e:\backup\delphi\demo\wxdevcpp\source\components\
FormMode=0
FormFile=
[UNITS$]
Lines=12
L1=WinTypes
L2=WinProcs
L3=Messages
L4=SysUtils
L5=Classes
L6=Controls
L7=Forms
L8=Graphics
L9=Comctrls
L10=WxUtils
L11=ExtCtrls
L12=WxSizerPanel
[ITEMLIST$]
Create=Method
Destroy=Method
EVT_LIST_BEGIN_DRAG=Property
EVT_LIST_BEGIN_LABEL_EDIT=Property
EVT_LIST_BEGIN_RDRAG=Property
EVT_LIST_CACHE_HINT=Property
EVT_LIST_COL_BEGIN_DRAG=Property
EVT_LIST_COL_CLICK=Property
EVT_LIST_COL_DRAGGING=Property
EVT_LIST_COL_END_DRAG=Property
EVT_LIST_COL_RIGHT_CLICK=Property
EVT_LIST_DELETE_ALL_ITEMS=Property
EVT_LIST_DELETE_ITEM=Property
EVT_LIST_END_LABEL_EDIT=Property
EVT_LIST_INSERT_ITEM=Property
EVT_LIST_ITEM_ACTIVATED=Property
EVT_LIST_ITEM_DESELECTED=Property
EVT_LIST_ITEM_FOCUSED=Property
EVT_LIST_ITEM_MIDDLE_CLICK=Property
EVT_LIST_ITEM_RIGHT_CLICK=Property
EVT_LIST_ITEM_SELECTED=Property
EVT_LIST_KEY_DOWN=Property
EVT_UPDATE_UI=Property
FWx_EventList=Variable
FWx_PropertyList=Variable
GenerateControlIDs:String=Method
GenerateEventTableEntries=Method
GenerateGUIControlCreation:String=Method
GenerateGUIControlDeclaration:String=Method
GenerateHeaderInclude:String=Method
GenerateImageInclude:=Method
GetEventList:TStringlist=Method
GetIDName:String=Method
GetIDValue:LongInt=Method
GetParameterFromEventName=Method
GetPropertyList:TStringList=Method
GetTypeFromEventName=Method
GetWxClassName:String=Method
Loaded=Method
OnKeyDown=ExistingEvent
OnKeyPress=ExistingEvent
OnKeyUp=ExistingEvent
SaveControlOrientation=Method
SetIDName=Method
SetIDValue=Method
SetWxClassName=Method
Wx_BGColor=Property
Wx_Border=Property
Wx_Class=Property
Wx_ControlOrientation=Property
Wx_Enabled=Property
Wx_FGColor=Property
Wx_GeneralStyle=Property
Wx_HelpText=Property
Wx_Hidden=Property
Wx_HorizontalAlignment=Property
Wx_IDName=Property
Wx_IDValue=Property
Wx_ListviewStyle=Property
Wx_ProxyBGColorString=Property
Wx_ProxyFGColorString=Property
Wx_StrechFactor=Property
Wx_ToolTip=Property
Wx_VerticalAlignment=Property
Wx_StretchFactor=Property
GetStretchFactor:Integer;=Method
SetStretchFactor=Method
[GLOBAL$]
Descr=
DefaultCode=1
Keywords=
[CODE$]
Lines=9
L1={
L2=*************IMPORTANT*************
L3=If you want to change any of the wxwidgets components,  you have to use comp screate by David Price.
L4=You can download a copy from
L5=
L6=http://torry.net/tools/components/compcreation/cc.zip
L7=
L8=***IF YOU FOLLOW THIS YOUR UPDATES WONT BE INCLUDED IN THE DISTRIBUTION****
L9=}
[HELP$]
Lines=0
[IMPGLOBAL$]
Descr=
DefaultCode=1
Keywords=
[IMPGLOBAL$CODE$]
Lines=0
[IMPGLOBAL$HELP$]
Lines=0
[Create]
Descr=
DefaultCode=2
Keywords=
Kind=2
Header=Create(AOwner: TComponent)
S=0
Ov=1
Mode=2
WinMessage=
[CreateCODE$]
Lines=99
L1=begin
L2=~~~~~{ Call the Create method of the parent class }
L3=~~~~~inherited Create(AOwner);
L4=
L5=~~~~~{ AutoInitialize sets the initial values of variables and      }
L6=~~~~~{ properties; also, it creates objects for properties of       }
L7=~~~~~{ standard Delphi object types (e.g., TFont, TTimer,           }
L8=~~~~~{ TPicture) and for any variables marked as objects.           }
L9=~~~~~{ AutoInitialize method is generated by Component Create.      }
L10=~~~~~AutoInitialize;
L11=
L12=~~~~~{ Code to perform other tasks when the component is created }
L13=~~~~~FWx_PropertyList.add('Wx_ListviewStyle:Listview Style');
L14=~~~~~FWx_PropertyList.add('Items :Items');
L15=~~~~~FWx_PropertyList.add('Wx_Hidden :Hidden');
L16=~~~~~FWx_PropertyList.add('Wx_Border : Border ');
L17=~~~~~FWx_PropertyList.add('Wx_HelpText :HelpText ');
L18=~~~~~FWx_PropertyList.add('Wx_IDName : IDName ');
L19=~~~~~FWx_PropertyList.add('Wx_IDValue : IDValue ');
L20=~~~~~FWx_PropertyList.add('Wx_ToolTip :ToolTip ');
L21=~~~~~FWx_PropertyList.add('Text:Text');
L22=~~~~~FWx_PropertyList.add('Name:Name');
L23=~~~~~FWx_PropertyList.add('Wx_Class:Base Class');
L24=~~~~~FWx_PropertyList.add('Wx_Enabled:Enabled');
L25=~~~~~FWx_PropertyList.add('Left:Left');
L26=~~~~~FWx_PropertyList.add('Top:Top');
L27=~~~~~FWx_PropertyList.add('Width:Width');
L28=~~~~~FWx_PropertyList.add('Height:Height');
L29=~~~~~FWx_PropertyList.add('Columns:Columns');
L30=
L31=~~~~~FWx_PropertyList.add('Wx_BGColor:Background Color');
L32=~~~~~FWx_PropertyList.add('Wx_FGColor:Foreground Color');
L33=
L34=~~~~~FWx_PropertyList.add('Wx_GeneralStyle : General Styles');
L35=~~~~~FWx_PropertyList.Add('wxSIMPLE_BORDER:wxSIMPLE_BORDER');
L36=~~~~~FWx_PropertyList.Add('wxDOUBLE_BORDER:wxDOUBLE_BORDER');
L37=~~~~~FWx_PropertyList.Add('wxSUNKEN_BORDER:wxSUNKEN_BORDER');
L38=~~~~~FWx_PropertyList.Add('wxRAISED_BORDER:wxRAISED_BORDER');
L39=~~~~~FWx_PropertyList.Add('wxSTATIC_BORDER:wxSTATIC_BORDER');
L40=~~~~~FWx_PropertyList.Add('wxTRANSPARENT_WINDOW:wxTRANSPARENT_WINDOW');
L41=~~~~~FWx_PropertyList.Add('wxNO_3D:wxNO_3D');
L42=~~~~~FWx_PropertyList.Add('wxTAB_TRAVERSAL:wxTAB_TRAVERSAL');
L43=~~~~~FWx_PropertyList.Add('wxWANTS_CHARS:wxWANTS_CHARS');
L44=~~~~~FWx_PropertyList.Add('wxNO_FULL_REPAINT_ON_RESIZE:wxNO_FULL_REPAINT_ON_RESIZE');
L45=~~~~~FWx_PropertyList.Add('wxVSCROLL:wxVSCROLL');
L46=~~~~~FWx_PropertyList.Add('wxHSCROLL:wxHSCROLL');
L47=~~~~~FWx_PropertyList.Add('wxCLIP_CHILDREN:wxCLIP_CHILDREN');
L48=
L49=~~~~~FWx_PropertyList.add('Font : Font');
L50=
L51=~~~~~FWx_PropertyList.add('wxLC_LIST:wxLC_LIST');
L52=~~~~~FWx_PropertyList.add('wxLC_REPORT:wxLC_REPORT');
L53=~~~~~FWx_PropertyList.add('wxLC_VIRTUAL:wxLC_VIRTUAL');
L54=~~~~~FWx_PropertyList.add('wxLC_ICON:wxLC_ICON');
L55=~~~~~FWx_PropertyList.add('wxLC_SMALL_ICON:wxLC_SMALL_ICON');
L56=~~~~~FWx_PropertyList.add('wxLC_ALIGN_TOP:wxLC_ALIGN_TOP');
L57=~~~~~FWx_PropertyList.add('wxLC_ALIGN_LEFT:wxLC_ALIGN_LEFT');
L58=~~~~~FWx_PropertyList.add('wxLC_AUTOARRANGE:wxLC_AUTOARRANGE');
L59=~~~~~FWx_PropertyList.add('wxLC_USER_TEXT:wxLC_USER_TEXT');
L60=~~~~~FWx_PropertyList.add('wxLC_EDIT_LABELS:wxLC_EDIT_LABELS');
L61=~~~~~FWx_PropertyList.add('wxLC_NO_HEADER:wxLC_NO_HEADER');
L62=~~~~~FWx_PropertyList.add('wxLC_SINGLE_SEL:wxLC_SINGLE_SEL');
L63=~~~~~FWx_PropertyList.add('wxLC_SORT_ASCENDING:wxLC_SORT_ASCENDING');
L64=~~~~~FWx_PropertyList.add('wxLC_SORT_DESCENDING:wxLC_SORT_DESCENDING');
L65=~~~~~FWx_PropertyList.add('wxLC_HRULES:wxLC_HRULES');
L66=~~~~~FWx_PropertyList.add('wxLC_VRULES:wxLC_VRULES');
L67=
L68=~~~~~FWx_PropertyList.add('Wx_HorizontalAlignment : HorizontalAlignment');
L69=~~~~~FWx_PropertyList.add('Wx_VerticalAlignment   : VerticalAlignment');
L70=
L71=
L72=
L73=~~~~FWx_EventList.add('EVT_UPDATE_UI:OnUpdateUI');
L74=~~~~FWx_EventList.add('EVT_LIST_ITEM_SELECTED:OnSelected');
L75=~~~~FWx_EventList.add('EVT_LIST_ITEM_DESELECTED:OnDeselected');
L76=~~~~FWx_EventList.add('EVT_LIST_BEGIN_DRAG:OnBeginDrag');
L77=~~~~FWx_EventList.add('EVT_LIST_BEGIN_RDRAG:OnBeginRDrag');
L78=~~~~FWx_EventList.add('EVT_LIST_BEGIN_LABEL_EDIT:OnBeginLabelEdit');
L79=~~~~FWx_EventList.add('EVT_LIST_END_LABEL_EDIT:OnEndLabelEdit');
L80=~~~~FWx_EventList.add('EVT_LIST_DELETE_ITEM:OnDeleteItem');
L81=~~~~FWx_EventList.add('EVT_LIST_DELETE_ALL_ITEMS:OnDeleteAllItems');
L82=~~~~FWx_EventList.add('EVT_LIST_ITEM_ACTIVATED:OnItemActivated');
L83=~~~~FWx_EventList.add('EVT_LIST_ITEM_FOCUSED:OnItemFocused');
L84=~~~~FWx_EventList.add('EVT_LIST_ITEM_MIDDLE_CLICK:OnMiddleClick');
L85=~~~~FWx_EventList.add('EVT_LIST_ITEM_RIGHT_CLICK:OnRightClick');
L86=~~~~FWx_EventList.add('EVT_LIST_KEY_DOWN:OnKeyDown');
L87=~~~~FWx_EventList.add('EVT_LIST_INSERT_ITEM:OnInsertItem');
L88=~~~~FWx_EventList.add('EVT_LIST_COL_CLICK:OnColLeftClick');
L89=~~~~FWx_EventList.add('EVT_LIST_COL_RIGHT_CLICK:OnColRightClick');
L90=~~~~FWx_EventList.add('EVT_LIST_COL_BEGIN_DRAG:OnColBeginDrag');
L91=~~~~FWx_EventList.add('EVT_LIST_COL_DRAGGING:OnColDragging');
L92=~~~~FWx_EventList.add('EVT_LIST_COL_END_DRAG:OnColEndDrag');
L93=~~~~FWx_EventList.add('EVT_LIST_CACHE_HINT:OnCacheHint');
L94=~~~~FWx_EventList.add('EVT_UPDATE_UI:OnUpdate');
L95=
L96=~~~~~FWx_ListviewStyle:= [wxLC_REPORT];
L97=~~~~~ViewStyle:=vsReport ;
L98=
L99=end;
[CreateHELP$]
Lines=0
[Destroy]
Descr=
DefaultCode=4
Keywords=
Kind=3
Header=Destroy
S=0
Ov=1
Mode=2
WinMessage=
[DestroyCODE$]
Lines=13
L1=begin
L2=~~~~~{ AutoDestroy, which is generated by Component Create, frees any   }
L3=~~~~~{ objects created by AutoInitialize.                               }
L4=~~~~~AutoDestroy;
L5=
L6=~~~~~{ Here, free any other dynamic objects that the component methods  }
L7=~~~~~{ created but have not yet freed.  Also perform any other clean-up }
L8=~~~~~{ operations needed before the component is destroyed.             }
L9=
L10=~~~~~{ Last, free the component by calling the Destroy method of the    }
L11=~~~~~{ parent class.                                                    }
L12=~~~~~inherited Destroy;
L13=end;
[DestroyHELP$]
Lines=0
[EVT_LIST_BEGIN_DRAG]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_BEGIN_DRAGCODE$]
Lines=0
[EVT_LIST_BEGIN_DRAGHELP$]
Lines=0
[EVT_LIST_BEGIN_LABEL_EDIT]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_BEGIN_LABEL_EDITCODE$]
Lines=0
[EVT_LIST_BEGIN_LABEL_EDITHELP$]
Lines=0
[EVT_LIST_BEGIN_RDRAG]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_BEGIN_RDRAGCODE$]
Lines=0
[EVT_LIST_BEGIN_RDRAGHELP$]
Lines=0
[EVT_LIST_CACHE_HINT]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_CACHE_HINTCODE$]
Lines=0
[EVT_LIST_CACHE_HINTHELP$]
Lines=0
[EVT_LIST_COL_BEGIN_DRAG]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_COL_BEGIN_DRAGCODE$]
Lines=0
[EVT_LIST_COL_BEGIN_DRAGHELP$]
Lines=0
[EVT_LIST_COL_CLICK]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_COL_CLICKCODE$]
Lines=0
[EVT_LIST_COL_CLICKHELP$]
Lines=0
[EVT_LIST_COL_DRAGGING]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_COL_DRAGGINGCODE$]
Lines=0
[EVT_LIST_COL_DRAGGINGHELP$]
Lines=0
[EVT_LIST_COL_END_DRAG]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_COL_END_DRAGCODE$]
Lines=0
[EVT_LIST_COL_END_DRAGHELP$]
Lines=0
[EVT_LIST_COL_RIGHT_CLICK]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_COL_RIGHT_CLICKCODE$]
Lines=0
[EVT_LIST_COL_RIGHT_CLICKHELP$]
Lines=0
[EVT_LIST_DELETE_ALL_ITEMS]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_DELETE_ALL_ITEMSCODE$]
Lines=0
[EVT_LIST_DELETE_ALL_ITEMSHELP$]
Lines=0
[EVT_LIST_DELETE_ITEM]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_DELETE_ITEMCODE$]
Lines=0
[EVT_LIST_DELETE_ITEMHELP$]
Lines=0
[EVT_LIST_END_LABEL_EDIT]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_END_LABEL_EDITCODE$]
Lines=0
[EVT_LIST_END_LABEL_EDITHELP$]
Lines=0
[EVT_LIST_INSERT_ITEM]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_INSERT_ITEMCODE$]
Lines=0
[EVT_LIST_INSERT_ITEMHELP$]
Lines=0
[EVT_LIST_ITEM_ACTIVATED]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_ITEM_ACTIVATEDCODE$]
Lines=0
[EVT_LIST_ITEM_ACTIVATEDHELP$]
Lines=0
[EVT_LIST_ITEM_DESELECTED]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_ITEM_DESELECTEDCODE$]
Lines=0
[EVT_LIST_ITEM_DESELECTEDHELP$]
Lines=0
[EVT_LIST_ITEM_FOCUSED]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_ITEM_FOCUSEDCODE$]
Lines=0
[EVT_LIST_ITEM_FOCUSEDHELP$]
Lines=0
[EVT_LIST_ITEM_MIDDLE_CLICK]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_ITEM_MIDDLE_CLICKCODE$]
Lines=0
[EVT_LIST_ITEM_MIDDLE_CLICKHELP$]
Lines=0
[EVT_LIST_ITEM_RIGHT_CLICK]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_ITEM_RIGHT_CLICKCODE$]
Lines=0
[EVT_LIST_ITEM_RIGHT_CLICKHELP$]
Lines=0
[EVT_LIST_ITEM_SELECTED]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_ITEM_SELECTEDCODE$]
Lines=0
[EVT_LIST_ITEM_SELECTEDHELP$]
Lines=0
[EVT_LIST_KEY_DOWN]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_LIST_KEY_DOWNCODE$]
Lines=0
[EVT_LIST_KEY_DOWNHELP$]
Lines=0
[EVT_UPDATE_UI]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_UPDATE_UICODE$]
Lines=0
[EVT_UPDATE_UIHELP$]
Lines=0
[FWx_EventList]
Descr=
DefaultCode=17
Keywords=
DataType=TStringList
Default=
Quote=0
Sc=10
IsObject=1
IsSubComponent=0
[FWx_EventListCODE$]
Lines=0
[FWx_EventListHELP$]
Lines=0
[FWx_PropertyList]
Descr=
DefaultCode=17
Keywords=
DataType=TStringList
Default=
Quote=0
Sc=10
IsObject=1
IsSubComponent=0
[FWx_PropertyListCODE$]
Lines=0
[FWx_PropertyListHELP$]
Lines=0
[GenerateControlIDs:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateControlIDs:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateControlIDs:StringCODE$]
Lines=10
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=~~~~~if (Wx_IDValue > 0) and (trim(Wx_IDName) <> '') then
L9=~~~~~~~~Result:=Format('#define %s %d ',[Wx_IDName,Wx_IDValue]);
L10=end;
[GenerateControlIDs:StringHELP$]
Lines=0
[GenerateEventTableEntries]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateEventTableEntries(CurrClassName:String):String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateEventTableEntriesCODE$]
Lines=124
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=
L8=~~~~~Result:='';
L9=
L10=~~~~~if trim(EVT_UPDATE_UI) <> '' then
L11=~~~~~begin
L12=~~~~~~~~~~Result:=Format('EVT_UPDATE_UI(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_UPDATE_UI]) +'';
L13=~~~~~end;
L14=
L15=~~~~~if trim(EVT_LIST_ITEM_SELECTED) <> '' then
L16=~~~~~begin
L17=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_ITEM_SELECTED(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_ITEM_SELECTED]) +'';
L18=~~~~~end;
L19=
L20=
L21=~~~~~if trim(EVT_LIST_ITEM_DESELECTED) <> '' then
L22=~~~~~begin
L23=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_ITEM_DESELECTED(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_ITEM_DESELECTED]) +'';
L24=~~~~~end;
L25=
L26=~~~~~if trim(EVT_LIST_BEGIN_DRAG) <> '' then
L27=~~~~~begin
L28=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_BEGIN_DRAG(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_BEGIN_DRAG]) +'';
L29=~~~~~end;
L30=
L31=~~~~~if trim(EVT_LIST_BEGIN_RDRAG) <> '' then
L32=~~~~~begin
L33=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_BEGIN_RDRAG(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_BEGIN_RDRAG]) +'';
L34=~~~~~end;
L35=
L36=~~~~~if trim(EVT_LIST_BEGIN_LABEL_EDIT) <> '' then
L37=~~~~~begin
L38=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_BEGIN_LABEL_EDIT(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_BEGIN_LABEL_EDIT]) +'';
L39=~~~~~end;
L40=
L41=~~~~~if trim(EVT_LIST_END_LABEL_EDIT) <> '' then
L42=~~~~~begin
L43=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_END_LABEL_EDIT(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_END_LABEL_EDIT]) +'';
L44=~~~~~end;
L45=
L46=~~~~~if trim(EVT_LIST_DELETE_ITEM) <> '' then
L47=~~~~~begin
L48=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_DELETE_ITEM(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_DELETE_ITEM]) +'';
L49=~~~~~end;
L50=
L51=~~~~~if trim(EVT_LIST_DELETE_ALL_ITEMS) <> '' then
L52=~~~~~begin
L53=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_DELETE_ALL_ITEMS(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_DELETE_ALL_ITEMS]) +'';
L54=~~~~~end;
L55=
L56=~~~~~if trim(EVT_LIST_ITEM_ACTIVATED) <> '' then
L57=~~~~~begin
L58=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_ITEM_ACTIVATED(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_ITEM_ACTIVATED]) +'';
L59=~~~~~end;
L60=
L61=
L62=~~~~~if trim(EVT_LIST_ITEM_FOCUSED) <> '' then
L63=~~~~~begin
L64=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_ITEM_FOCUSED(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_ITEM_FOCUSED]) +'';
L65=~~~~~end;
L66=
L67=~~~~~if trim(EVT_LIST_ITEM_MIDDLE_CLICK) <> '' then
L68=~~~~~begin
L69=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_ITEM_MIDDLE_CLICK(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_ITEM_MIDDLE_CLICK]) +'';
L70=~~~~~end;
L71=
L72=
L73=~~~~~if trim(EVT_LIST_ITEM_RIGHT_CLICK) <> '' then
L74=~~~~~begin
L75=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_ITEM_RIGHT_CLICK(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_ITEM_RIGHT_CLICK]) +'';
L76=~~~~~end;
L77=
L78=~~~~~if trim(EVT_LIST_KEY_DOWN) <> '' then
L79=~~~~~begin
L80=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_KEY_DOWN(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_KEY_DOWN]) +'';
L81=~~~~~end;
L82=
L83=
L84=~~~~~if trim(EVT_LIST_INSERT_ITEM) <> '' then
L85=~~~~~begin
L86=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_INSERT_ITEM(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_INSERT_ITEM]) +'';
L87=~~~~~end;
L88=
L89=~~~~~if trim(EVT_LIST_COL_CLICK) <> '' then
L90=~~~~~begin
L91=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_COL_CLICK(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_COL_CLICK]) +'';
L92=~~~~~end;
L93=
L94=~~~~~if trim(EVT_LIST_COL_RIGHT_CLICK) <> '' then
L95=~~~~~begin
L96=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_COL_RIGHT_CLICK(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_COL_RIGHT_CLICK]) +'';
L97=~~~~~end;
L98=
L99=~~~~~if trim(EVT_LIST_COL_BEGIN_DRAG) <> '' then
L100=~~~~~begin
L101=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_COL_BEGIN_DRAG(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_COL_BEGIN_DRAG]) +'';
L102=~~~~~end;
L103=
L104=~~~~~if trim(EVT_LIST_COL_DRAGGING) <> '' then
L105=~~~~~begin
L106=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_COL_DRAGGING(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_COL_DRAGGING]) +'';
L107=~~~~~end;
L108=
L109=~~~~~if trim(EVT_LIST_COL_END_DRAG) <> '' then
L110=~~~~~begin
L111=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_COL_END_DRAG(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_COL_END_DRAG]) +'';
L112=~~~~~end;
L113=
L114=~~~~~if trim(EVT_LIST_CACHE_HINT) <> '' then
L115=~~~~~begin
L116=~~~~~~~~~~Result:=Result+#13+Format('EVT_LIST_CACHE_HINT(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_LIST_CACHE_HINT]) +'';
L117=~~~~~end;
L118=
L119=~~~~~if trim(EVT_UPDATE_UI) <> '' then
L120=~~~~~begin
L121=~~~~~~~~~~Result:=Result+#13+Format('EVT_UPDATE_UI(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_UPDATE_UI]) +'';
L122=~~~~~end;
L123=
L124=end;
[GenerateEventTableEntriesHELP$]
Lines=0
[GenerateGUIControlCreation:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateGUIControlCreation:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateGUIControlCreation:StringCODE$]
Lines=49
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~var
L5=~~~~~strStyle,parentName,strAlignment:String;
L6=~~~~~strColumn:String;
L7=~~~~~i:Integer;
L8=
L9=begin
L10=~~~~~Result:='';
L11=
L12=~~~~if (self.Parent is TForm) or (self.Parent is TWxSizerPanel) then
L13=~~~~~~~parentName:='this'
L14=~~~~else
L15=~~~~~~~parentName:=self.Parent.name;
L16=
L17=~~~~strStyle:=GetListViewSpecificStyle(Wx_GeneralStyle,Wx_ListviewStyle);
L18=
L19=~~~~Result:=Format('%s =  new %s(%s, %s,wxPoint(%d,%d),wxSize(%d,%d) %s);',[self.Name,self.wx_Class,parentName,GetWxIDString(self.Wx_IDName,self.Wx_IDValue),self.Left,self.Top,self.width,self.Height,strStyle] );
L20=
L21=~~~~if trim(self.Wx_ToolTip) <> '' then
L22=~~~~~~~~Result:=Result + #13+Format('%s->SetToolTip(wxT("%s"));',[self.Name,self.Wx_ToolTip]);
L23=
L24=~~~~if self.Wx_Hidden then
L25=~~~~~~~~Result:=Result + #13+Format('%s->Show(false);',[self.Name]);
L26=
L27=~~~~if not Wx_Enabled then
L28=~~~~~~~~Result:=Result + #13+Format('%s->Enable(false);',[self.Name]);
L29=
L30=~~~~if trim(self.Wx_HelpText) <> '' then
L31=~~~~~~~~Result:=Result +#13+Format('%s->SetHelpText(_("%s"));',[self.Name,self.Wx_HelpText]);
L32=~~~~for i:= self.columns.count -1 downto 0 Do
L33=~~~~begin
L34=~~~~~~~~~Result:=Result +#13+Format('%s->InsertColumn(0,_("%s"),%s,%d );',[self.Name,self.columns[i].caption,AlignmentToStr(columns[i].Alignment),self.columns[i].width ]);
L35=~~~~end;
L36=
L37=~~~~if(self.Parent is TWxSizerPanel) then
L38=~~~~begin
L39=~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_HorizontalAlignment) + ' | '+ SizerAlignmentToStr(Wx_VerticalAlignment) +' | wxALL';
L40=~~~~~~~~if wx_ControlOrientation = wxControlVertical then
L41=~~~~~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_HorizontalAlignment)+ ' | wxALL';
L42=
L43=~~~~~~~~~if wx_ControlOrientation = wxControlHorizontal then
L44=~~~~~~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_VerticalAlignment)+ ' | wxALL';
L45=
L46=
L47=~~~~~~~~~Result:=Result +#13+Format('%s->Add(%s,%d,%s,%d);',[self.Parent.Name,self.Name,self.Wx_StrechFactor,strAlignment,self.Wx_Border]);
L48=~~~~end;
L49=end;
[GenerateGUIControlCreation:StringHELP$]
Lines=0
[GenerateGUIControlDeclaration:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateGUIControlDeclaration:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateGUIControlDeclaration:StringCODE$]
Lines=9
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=~~~~~Result:=Format('%s *%s;',[Self.wx_Class,Self.Name]);
L9=end;
[GenerateGUIControlDeclaration:StringHELP$]
Lines=0
[GenerateHeaderInclude:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateHeaderInclude:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateHeaderInclude:StringCODE$]
Lines=9
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=~~~~~Result:='#include <wx/listctrl.h>';
L9=end;
[GenerateHeaderInclude:StringHELP$]
Lines=0
[GenerateImageInclude:]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateImageInclude: string
S=0
Ov=0
Mode=2
WinMessage=
[GenerateImageInclude:CODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=
L8=end;
[GenerateImageInclude:HELP$]
Lines=0
[GetEventList:TStringlist]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetEventList:TStringlist
S=0
Ov=0
Mode=2
WinMessage=
[GetEventList:TStringlistCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=FWx_EventList;
L8=end;
[GetEventList:TStringlistHELP$]
Lines=0
[GetIDName:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetIDName:String
S=0
Ov=0
Mode=2
WinMessage=
[GetIDName:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_IDName;
L8=end;
[GetIDName:StringHELP$]
Lines=0
[GetIDValue:LongInt]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetIDValue:LongInt
S=0
Ov=0
Mode=2
WinMessage=
[GetIDValue:LongIntCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_IDValue;
L8=end;
[GetIDValue:LongIntHELP$]
Lines=0
[GetParameterFromEventName]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetParameterFromEventName(EventName: string):String
S=0
Ov=0
Mode=2
WinMessage=
[GetParameterFromEventNameCODE$]
Lines=113
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=Result:='void';
L8=if EventName = 'EVT_LIST_ITEM_SELECTED' then
L9=begin
L10=~Result:='wxListEvent& event';
L11=~exit;
L12=end;
L13=if EventName = 'EVT_LIST_ITEM_DESELECTED' then
L14=begin
L15=~Result:='wxListEvent& event';
L16=~exit;
L17=end;
L18=if EventName = 'EVT_LIST_BEGIN_DRAG' then
L19=begin
L20=~Result:='wxListEvent& event';
L21=~exit;
L22=end;
L23=if EventName = 'EVT_LIST_BEGIN_RDRAG' then
L24=begin
L25=~Result:='wxListEvent& event';
L26=~exit;
L27=end;
L28=if EventName = 'EVT_LIST_BEGIN_LABEL_EDIT' then
L29=begin
L30=~Result:='wxListEvent& event';
L31=~exit;
L32=end;
L33=if EventName = 'EVT_LIST_END_LABEL_EDIT' then
L34=begin
L35=~Result:='wxListEvent& event';
L36=~exit;
L37=end;
L38=if EventName = 'EVT_LIST_DELETE_ITEM' then
L39=begin
L40=~Result:='wxListEvent& event';
L41=~exit;
L42=end;
L43=if EventName = 'EVT_LIST_DELETE_ALL_ITEMS' then
L44=begin
L45=~Result:='wxListEvent& event';
L46=~exit;
L47=end;
L48=if EventName = 'EVT_LIST_ITEM_ACTIVATED' then
L49=begin
L50=~Result:='wxListEvent& event';
L51=~exit;
L52=end;
L53=if EventName = 'EVT_LIST_ITEM_FOCUSED' then
L54=begin
L55=~Result:='wxListEvent& event';
L56=~exit;
L57=end;
L58=if EventName = 'EVT_LIST_ITEM_MIDDLE_CLICK' then
L59=begin
L60=~Result:='wxListEvent& event';
L61=~exit;
L62=end;
L63=if EventName = 'EVT_LIST_ITEM_RIGHT_CLICK' then
L64=begin
L65=~Result:='wxListEvent& event';
L66=~exit;
L67=end;
L68=if EventName = 'EVT_LIST_KEY_DOWN' then
L69=begin
L70=~Result:='wxListEvent& event';
L71=~exit;
L72=end;
L73=if EventName = 'EVT_LIST_INSERT_ITEM' then
L74=begin
L75=~Result:='wxListEvent& event';
L76=~exit;
L77=end;
L78=if EventName = 'EVT_LIST_COL_CLICK' then
L79=begin
L80=~Result:='wxListEvent& event';
L81=~exit;
L82=end;
L83=if EventName = 'EVT_LIST_COL_RIGHT_CLICK' then
L84=begin
L85=~Result:='wxListEvent& event';
L86=~exit;
L87=end;
L88=if EventName = 'EVT_LIST_COL_BEGIN_DRAG' then
L89=begin
L90=~Result:='wxListEvent& event';
L91=~exit;
L92=end;
L93=if EventName = 'EVT_LIST_COL_DRAGGING' then
L94=begin
L95=~Result:='wxListEvent& event';
L96=~exit;
L97=end;
L98=if EventName = 'EVT_LIST_COL_END_DRAG' then
L99=begin
L100=~Result:='wxListEvent& event';
L101=~exit;
L102=end;
L103=if EventName = 'EVT_LIST_CACHE_HINT' then
L104=begin
L105=~Result:='wxListEvent& event';
L106=~exit;
L107=end;
L108=if EventName = 'EVT_UPDATE_UI' then
L109=begin
L110=~Result:='wxListEvent& event';
L111=~exit;
L112=end;
L113=end;
[GetParameterFromEventNameHELP$]
Lines=0
[GetPropertyList:TStringList]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetPropertyList:TStringList
S=0
Ov=0
Mode=2
WinMessage=
[GetPropertyList:TStringListCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=FWx_PropertyList;
L8=end;
[GetPropertyList:TStringListHELP$]
Lines=0
[GetTypeFromEventName]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetTypeFromEventName(EventName: string):string
S=0
Ov=0
Mode=2
WinMessage=
[GetTypeFromEventNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=
L8=end;
[GetTypeFromEventNameHELP$]
Lines=0
[GetWxClassName:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetWxClassName:String
S=0
Ov=0
Mode=2
WinMessage=
[GetWxClassName:StringCODE$]
Lines=10
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~if wx_Class = '' then
L8=~~~~~~~~wx_Class:='wxListCtrl';
L9=~~~~~Result:=wx_Class;
L10=end;
[GetWxClassName:StringHELP$]
Lines=0
[Loaded]
Descr=
DefaultCode=20
Keywords=
Kind=0
Header=Loaded
S=1
Ov=1
Mode=2
WinMessage=
[LoadedCODE$]
Lines=7
L1=begin
L2=~~~~~inherited Loaded;
L3=
L4=~~~~~{ Perform any component setup that depends on the property
L5=~~~~~~~values having been set }
L6=
L7=end;
[LoadedHELP$]
Lines=0
[OnKeyDown]
Descr=
DefaultCode=10
Keywords=
Ov=0
P=1
HandlerDecl=KeyDown(var Key: Word; Shift: TShiftState)
[OnKeyDownCODE$]
Lines=0
[OnKeyDownHELP$]
Lines=0
[OnKeyPress]
Descr=
DefaultCode=9
Keywords=
Ov=1
P=1
HandlerDecl=KeyPress(var Key : Char)
[OnKeyPressCODE$]
Lines=16
L1=const
L2=~~~~~TabKey = Char(VK_TAB);
L3=~~~~~EnterKey = Char(VK_RETURN);
L4=begin
L5=~~~~~{ Key contains the character produced by the keypress.
L6=~~~~~~~It can be tested or assigned a new value before the
L7=~~~~~~~call to the inherited KeyPress method.  Setting Key
L8=~~~~~~~to #0 before call to the inherited KeyPress method
L9=~~~~~~~terminates any further processing of the character. }
L10=
L11=~~~~~{ Activate KeyPress behavior of parent }
L12=~~~~~inherited KeyPress(Key);
L13=
L14=~~~~~{ Code to execute after KeyPress behavior of parent }
L15=
L16=end;
[OnKeyPressHELP$]
Lines=0
[OnKeyUp]
Descr=
DefaultCode=13
Keywords=
Ov=0
P=1
HandlerDecl=KeyUp(var Key: Word; Shift: TShiftState)
[OnKeyUpCODE$]
Lines=0
[OnKeyUpHELP$]
Lines=0
[SaveControlOrientation]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SaveControlOrientation(ControlOrientation:TWxControlOrientation)
S=0
Ov=0
Mode=2
WinMessage=
[SaveControlOrientationCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_ControlOrientation:=ControlOrientation;
L8=end;
[SaveControlOrientationHELP$]
Lines=0
[SetIDName]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetIDName(IDName:String)
S=0
Ov=0
Mode=2
WinMessage=
[SetIDNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_IDName:=IDName;
L8=end;
[SetIDNameHELP$]
Lines=0
[SetIDValue]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetIDValue(IDValue:longInt)
S=0
Ov=0
Mode=2
WinMessage=
[SetIDValueCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Wx_IDValue:=IDVAlue;
L8=end;
[SetIDValueHELP$]
Lines=0
[SetWxClassName]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetWxClassName(wxClassName:String)
S=0
Ov=0
Mode=2
WinMessage=
[SetWxClassNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_Class:=wxClassName;
L8=end;
[SetWxClassNameHELP$]
Lines=0
[Wx_BGColor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TColor
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_BGColorCODE$]
Lines=0
[Wx_BGColorHELP$]
Lines=0
[Wx_Border]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=5
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_BorderCODE$]
Lines=0
[Wx_BorderHELP$]
Lines=0
[Wx_Class]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault='wxListCtrl'
Quote=1
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ClassCODE$]
Lines=0
[Wx_ClassHELP$]
Lines=0
[Wx_ControlOrientation]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TwxControlOrientation
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ControlOrientationCODE$]
Lines=0
[Wx_ControlOrientationHELP$]
Lines=0
[Wx_Enabled]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=True
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_EnabledCODE$]
Lines=0
[Wx_EnabledHELP$]
Lines=0
[Wx_FGColor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TColor
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_FGColorCODE$]
Lines=0
[Wx_FGColorHELP$]
Lines=0
[Wx_GeneralStyle]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxStdStyleSet
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_GeneralStyleCODE$]
Lines=0
[Wx_GeneralStyleHELP$]
Lines=0
[Wx_HelpText]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HelpTextCODE$]
Lines=0
[Wx_HelpTextHELP$]
Lines=0
[Wx_Hidden]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=False
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HiddenCODE$]
Lines=0
[Wx_HiddenHELP$]
Lines=0
[Wx_HorizontalAlignment]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxSizerHorizontalAlignment
PropDefault=wxSZALIGN_CENTER_HORIZONTAL
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HorizontalAlignmentCODE$]
Lines=0
[Wx_HorizontalAlignmentHELP$]
Lines=0
[Wx_IDName]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_IDNameCODE$]
Lines=0
[Wx_IDNameHELP$]
Lines=0
[Wx_IDValue]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Longint
PropDefault=-1
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_IDValueCODE$]
Lines=0
[Wx_IDValueHELP$]
Lines=0
[Wx_ListviewStyle]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxLVStyleSet
PropDefault=
Quote=0
RM=1
WM=1
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ListviewStyleCODE$]
Lines=65
L1=begin
L2=
L3=
L4=~~~~~if wxLC_LIST  in Value then
L5=~~~~~begin
L6=~~~~~~~~~~if (wxLC_LIST  in FWx_ListviewStyle ) then
L7=~~~~~~~~~~begin
L8=~~~~~~~~~~end
L9=~~~~~~~~~~else
L10=~~~~~~~~~~begin
L11=~~~~~~~~~~~~~~~Value:=Value-[wxLC_REPORT]-[wxLC_ICON]-[wxLC_SMALL_ICON];
L12=~~~~~~~~~~~~~~~ViewStyle:=vsList;
L13=~~~~~~~~~~~~~~~FWx_ListviewStyle := Value;
L14=~~~~~~~~~~~~~~~exit;
L15=~~~~~~~~~~end;
L16=~~~~~end;
L17=
L18=~~~~~if wxLC_REPORT in Value then
L19=~~~~~begin
L20=~~~~~~~~~~if (wxLC_REPORT  in FWx_ListviewStyle ) then
L21=~~~~~~~~~~begin
L22=~~~~~~~~~~end
L23=~~~~~~~~~~else
L24=~~~~~~~~~~begin
L25=~~~~~~~~~~~~~~~Value:=Value-[wxLC_LIST] - [wxLC_ICON] - [wxLC_SMALL_ICON];
L26=~~~~~~~~~~~~~~~ViewStyle:=vsreport;
L27=~~~~~~~~~~~~~~~FWx_ListviewStyle := Value;
L28=~~~~~~~~~~~~~~~exit;
L29=~~~~~~~~~~end;
L30=~~~~~end;
L31=
L32=~~~~~if wxLC_ICON in Value  then
L33=~~~~~begin
L34=~~~~~~~~~~if (wxLC_ICON  in FWx_ListviewStyle ) then
L35=~~~~~~~~~~begin
L36=~~~~~~~~~~end
L37=~~~~~~~~~~else
L38=~~~~~~~~~~begin
L39=~~~~~~~~~~~~~~~Value:=Value-[wxLC_LIST] - [wxLC_REPORT]  - [wxLC_SMALL_ICON];
L40=~~~~~~~~~~~~~~~ViewStyle:=vsIcon;
L41=~~~~~~~~~~~~~~~FWx_ListviewStyle := Value;
L42=~~~~~~~~~~~~~~~exit;
L43=~~~~~~~~~~end;
L44=~~~~~end;
L45=
L46=~~~~~if wxLC_SMALL_ICON in Value  then
L47=~~~~~begin
L48=~~~~~~~~~~if (wxLC_SMALL_ICON  in FWx_ListviewStyle ) then
L49=~~~~~~~~~~begin
L50=~~~~~~~~~~end
L51=~~~~~~~~~~else
L52=~~~~~~~~~~begin
L53=~~~~~~~~~~~~~~~Value:=Value-[wxLC_LIST] - [wxLC_REPORT] - [wxLC_ICON];
L54=~~~~~~~~~~~~~~~ViewStyle:=vsSmallIcon;
L55=~~~~~~~~~~~~~~~FWx_ListviewStyle := Value;
L56=~~~~~~~~~~~~~~~exit;
L57=~~~~~~~~~end;
L58=~~~~~end;
L59=
L60=~~~~~Value:=Value + [wxLC_REPORT]-[wxLC_LIST] - [wxLC_ICON] - [wxLC_SMALL_ICON];
L61=~~~~~ViewStyle:=vsReport ;
L62=~~~~~FWx_ListviewStyle := Value;
L63=
L64=
L65=end;
[Wx_ListviewStyleREADCODE$]
Lines=3
L1=begin
L2=~~~~~Result := FWx_ListviewStyle;
L3=end;
[Wx_ListviewStyleHELP$]
Lines=0
[Wx_ProxyBGColorString]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxColorString
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ProxyBGColorStringCODE$]
Lines=0
[Wx_ProxyBGColorStringHELP$]
Lines=0
[Wx_ProxyFGColorString]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxColorString
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ProxyFGColorStringCODE$]
Lines=0
[Wx_ProxyFGColorStringHELP$]
Lines=0
[Wx_StrechFactor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_StrechFactorCODE$]
Lines=0
[Wx_StrechFactorHELP$]
Lines=0
[Wx_ToolTip]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ToolTipCODE$]
Lines=0
[Wx_ToolTipHELP$]
Lines=0
[Wx_VerticalAlignment]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxSizerVerticalAlignment
PropDefault=wxSZALIGN_CENTER_VERTICAL
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_VerticalAlignmentCODE$]
Lines=0
[Wx_VerticalAlignmentHELP$]
Lines=0
[Wx_StretchFactor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=0
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_StretchFactorCODE$]
Lines=0
[Wx_StretchFactorHELP$]
Lines=0
[GetStretchFactor:Integer;]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetStretchFactor:Integer;
S=0
Ov=0
Mode=2
WinMessage=
[GetStretchFactor:Integer;CODE$]
Lines=0
[GetStretchFactor:Integer;HELP$]
Lines=0
[SetStretchFactor]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetStretchFactor(intValue:Integer);
S=0
Ov=0
Mode=2
WinMessage=
[SetStretchFactorCODE$]
Lines=0
[SetStretchFactorHELP$]
Lines=0
