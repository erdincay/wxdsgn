[MAININFO$]
CCVer=4.0
Compatible20=0
Compatible21=0
Compatible22=0
Compatible25=0
Compatible30=0
Compatible40=1
Lang=Pasc
UnitName=WxSlider
LimitName=1
NewClassName=TWxSlider
ParentClassName=TTrackBar,IWxComponentInterface
VCLAncestorName=TTrackBar
DefaultPalette=wxWidgets
CopyrightLine=Copyright © 2003 by Guru Kathiresan
TargetDir=e:\backup\delphi\demo\wxdevcpp\source\components\
FormMode=0
FormFile=
[UNITS$]
Lines=12
L1=WinTypes
L2=WinProcs
L3=Messages
L4=SysUtils
L5=Classes
L6=Controls
L7=Forms
L8=Graphics
L9=Comctrls
L10=Wxutils
L11=ExtCtrls
L12=WxSizerPanel
[ITEMLIST$]
Create=Method
Destroy=Method
EVT_COMMAND_SCROLL=Property
EVT_COMMAND_SCROLL_BOTTOM=Property
EVT_COMMAND_SCROLL_ENDSCROLL=Property
EVT_COMMAND_SCROLL_LINEDOWN=Property
EVT_COMMAND_SCROLL_LINEUP=Property
EVT_COMMAND_SCROLL_PAGEDOWN=Property
EVT_COMMAND_SCROLL_PAGEUP=Property
EVT_COMMAND_SCROLL_THUMBRELEASE=Property
EVT_COMMAND_SCROLL_THUMBTRACK=Property
EVT_COMMAND_SCROLL_TOP=Property
EVT_SLIDER=Property
EVT_UPDATE_UI=Property
FWx_EventList=Variable
FWx_PropertyList=Variable
GenerateControlIDs:String=Method
GenerateEventTableEntries=Method
GenerateGUIControlCreation:String=Method
GenerateGUIControlDeclaration:String=Method
GenerateHeaderInclude:String=Method
GenerateImageInclude:=Method
GetEventList:TStringlist=Method
GetIDName:String=Method
GetIDValue:LongInt=Method
GetParameterFromEventName=Method
GetPropertyList:TStringList=Method
GetTypeFromEventName=Method
GetWxClassName:String=Method
Loaded=Method
OnKeyDown=ExistingEvent
OnKeyPress=ExistingEvent
OnKeyUp=ExistingEvent
SaveControlOrientation=Method
SetIDName=Method
SetIDValue=Method
SetWxClassName=Method
Wx_BGColor=Property
Wx_Border=Property
Wx_Class=Property
Wx_ControlOrientation=Property
Wx_Enabled=Property
Wx_FGColor=Property
Wx_GeneralStyle=Property
Wx_HelpText=Property
Wx_Hidden=Property
Wx_HorizontalAlignment=Property
Wx_IDName=Property
Wx_IDValue=Property
Wx_SliderStyle=Property
Wx_StrechFactor=Property
Wx_ToolTip=Property
Wx_VerticalAlignment=Property
Wx_ProxyBGColorString=Property
Wx_ProxyFGColorString=Property
Wx_StretchFactor=Property
GetStretchFactor:integer;=Method
SetStretchFactor=Method
[GLOBAL$]
Descr=
DefaultCode=1
Keywords=
[CODE$]
Lines=9
L1={
L2=*************IMPORTANT*************
L3=If you want to change any of the wxwidgets components,  you have to use comp screate by David Price.
L4=You can download a copy from
L5=
L6=http://torry.net/tools/components/compcreation/cc.zip
L7=
L8=***IF YOU FOLLOW THIS YOUR UPDATES WONT BE INCLUDED IN THE DISTRIBUTION****
L9=}
[HELP$]
Lines=0
[IMPGLOBAL$]
Descr=
DefaultCode=1
Keywords=
[IMPGLOBAL$CODE$]
Lines=0
[IMPGLOBAL$HELP$]
Lines=0
[Create]
Descr=
DefaultCode=2
Keywords=
Kind=2
Header=Create(AOwner: TComponent)
S=0
Ov=1
Mode=2
WinMessage=
[CreateCODE$]
Lines=76
L1=begin
L2=~~~~~{ Call the Create method of the parent class }
L3=~~~~~inherited Create(AOwner);
L4=
L5=~~~~~{ AutoInitialize sets the initial values of variables and      }
L6=~~~~~{ properties; also, it creates objects for properties of       }
L7=~~~~~{ standard Delphi object types (e.g., TFont, TTimer,           }
L8=~~~~~{ TPicture) and for any variables marked as objects.           }
L9=~~~~~{ AutoInitialize method is generated by Component Create.      }
L10=~~~~~AutoInitialize;
L11=
L12=~~~~~{ Code to perform other tasks when the component is created }
L13=~~~~~FWx_PropertyList.add('Wx_SliderStyle:Slider Style');
L14=~~~~~FWx_PropertyList.add('Min:Min');
L15=~~~~~FWx_PropertyList.add('Max:Max');
L16=~~~~~FWx_PropertyList.add('Wx_BKColor:Wx_BKColor');
L17=~~~~~FWx_PropertyList.add('wx_Class:Base Class');
L18=~~~~~FWx_PropertyList.add('Wx_Hidden :Hidden');
L19=~~~~~FWx_PropertyList.add('Wx_Border : Border ');
L20=~~~~~FWx_PropertyList.add('Wx_FGColor :FGColor ');
L21=~~~~~FWx_PropertyList.add('Wx_HelpText :HelpText ');
L22=~~~~~FWx_PropertyList.add('Wx_IDName : IDName ');
L23=~~~~~FWx_PropertyList.add('Wx_IDValue : IDValue ');
L24=~~~~~FWx_PropertyList.add('Wx_ToolTip :ToolTip ');
L25=~~~~~FWx_PropertyList.add('Caption : Caption ');
L26=~~~~~FWx_PropertyList.add('Name : Name');
L27=~~~~~FWx_PropertyList.add('Left : Left');
L28=~~~~~FWx_PropertyList.add('Top : Top');
L29=~~~~~FWx_PropertyList.add('Width : Width');
L30=~~~~~FWx_PropertyList.add('Height:Height');
L31=
L32=~~~~~FWx_PropertyList.add('Wx_BGColor:Background Color');
L33=~~~~~FWx_PropertyList.add('Wx_FGColor:Foreground Color');
L34=
L35=~~~~~FWx_PropertyList.add('Wx_GeneralStyle: General Styles');
L36=~~~~~FWx_PropertyList.Add('wxSIMPLE_BORDER:wxSIMPLE_BORDER');
L37=~~~~~FWx_PropertyList.Add('wxDOUBLE_BORDER:wxDOUBLE_BORDER');
L38=~~~~~FWx_PropertyList.Add('wxSUNKEN_BORDER:wxSUNKEN_BORDER');
L39=~~~~~FWx_PropertyList.Add('wxRAISED_BORDER:wxRAISED_BORDER');
L40=~~~~~FWx_PropertyList.Add('wxSTATIC_BORDER:wxSTATIC_BORDER');
L41=~~~~~FWx_PropertyList.Add('wxTRANSPARENT_WINDOW:wxTRANSPARENT_WINDOW');
L42=~~~~~FWx_PropertyList.Add('wxNO_3D:wxNO_3D');
L43=~~~~~FWx_PropertyList.Add('wxTAB_TRAVERSAL:wxTAB_TRAVERSAL');
L44=~~~~~FWx_PropertyList.Add('wxWANTS_CHARS:wxWANTS_CHARS');
L45=~~~~~FWx_PropertyList.Add('wxNO_FULL_REPAINT_ON_RESIZE:wxNO_FULL_REPAINT_ON_RESIZE');
L46=~~~~~FWx_PropertyList.Add('wxVSCROLL:wxVSCROLL');
L47=~~~~~FWx_PropertyList.Add('wxHSCROLL:wxHSCROLL');
L48=~~~~~FWx_PropertyList.Add('wxCLIP_CHILDREN:wxCLIP_CHILDREN');
L49=
L50=~~~~~FWx_PropertyList.add('Wx_GeneralStyle: General Styles');
L51=~~~~~FWx_PropertyList.Add('wxSL_AUTOTICKS:wxSL_AUTOTICKS');
L52=~~~~~FWx_PropertyList.Add('wxSL_LABELS:wxSL_LABELS');
L53=~~~~~FWx_PropertyList.Add('wxSL_LEFT:wxSL_LEFT');
L54=~~~~~FWx_PropertyList.Add('wxSL_RIGHT:wxSL_RIGHT');
L55=~~~~~FWx_PropertyList.Add('wxSL_TOP:wxSL_TOP');
L56=~~~~~FWx_PropertyList.Add('wxSL_SELRANGE:wxSL_SELRANGE');
L57=
L58=~~~~~FWx_PropertyList.add('Font : Font');
L59=
L60=~~~~~FWx_PropertyList.add('Wx_HorizontalAlignment : HorizontalAlignment');
L61=~~~~~FWx_PropertyList.add('Wx_VerticalAlignment   : VerticalAlignment');
L62=
L63=
L64=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL:OnScroll ');
L65=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_TOP:OnScrollTop ');
L66=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_BOTTOM:OnBottom ');
L67=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_LINEUP:OnLineUp ');
L68=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_LINEDOWN:OnLineDown ');
L69=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_PAGEUP:OnPageUp ');
L70=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_PAGEDOWN:OnPageDown ');
L71=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_THUMBTRACK:OnThumbtrack ');
L72=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_THUMBRELEASE:OnThumbRelease ');
L73=~~~~FWx_EventList.add('EVT_COMMAND_SCROLL_ENDSCROLL:OnEndScroll ');
L74=~~~~FWx_EventList.add('EVT_UPDATE_UI:OnUpdate ');
L75=
L76=end;
[CreateHELP$]
Lines=0
[Destroy]
Descr=
DefaultCode=4
Keywords=
Kind=3
Header=Destroy
S=0
Ov=1
Mode=2
WinMessage=
[DestroyCODE$]
Lines=13
L1=begin
L2=~~~~~{ AutoDestroy, which is generated by Component Create, frees any   }
L3=~~~~~{ objects created by AutoInitialize.                               }
L4=~~~~~AutoDestroy;
L5=
L6=~~~~~{ Here, free any other dynamic objects that the component methods  }
L7=~~~~~{ created but have not yet freed.  Also perform any other clean-up }
L8=~~~~~{ operations needed before the component is destroyed.             }
L9=
L10=~~~~~{ Last, free the component by calling the Destroy method of the    }
L11=~~~~~{ parent class.                                                    }
L12=~~~~~inherited Destroy;
L13=end;
[DestroyHELP$]
Lines=0
[EVT_COMMAND_SCROLL]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLLCODE$]
Lines=0
[EVT_COMMAND_SCROLLHELP$]
Lines=0
[EVT_COMMAND_SCROLL_BOTTOM]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_BOTTOMCODE$]
Lines=0
[EVT_COMMAND_SCROLL_BOTTOMHELP$]
Lines=0
[EVT_COMMAND_SCROLL_ENDSCROLL]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_ENDSCROLLCODE$]
Lines=0
[EVT_COMMAND_SCROLL_ENDSCROLLHELP$]
Lines=0
[EVT_COMMAND_SCROLL_LINEDOWN]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_LINEDOWNCODE$]
Lines=0
[EVT_COMMAND_SCROLL_LINEDOWNHELP$]
Lines=0
[EVT_COMMAND_SCROLL_LINEUP]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_LINEUPCODE$]
Lines=0
[EVT_COMMAND_SCROLL_LINEUPHELP$]
Lines=0
[EVT_COMMAND_SCROLL_PAGEDOWN]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_PAGEDOWNCODE$]
Lines=0
[EVT_COMMAND_SCROLL_PAGEDOWNHELP$]
Lines=0
[EVT_COMMAND_SCROLL_PAGEUP]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_PAGEUPCODE$]
Lines=0
[EVT_COMMAND_SCROLL_PAGEUPHELP$]
Lines=0
[EVT_COMMAND_SCROLL_THUMBRELEASE]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_THUMBRELEASECODE$]
Lines=0
[EVT_COMMAND_SCROLL_THUMBRELEASEHELP$]
Lines=0
[EVT_COMMAND_SCROLL_THUMBTRACK]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_THUMBTRACKCODE$]
Lines=0
[EVT_COMMAND_SCROLL_THUMBTRACKHELP$]
Lines=0
[EVT_COMMAND_SCROLL_TOP]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_COMMAND_SCROLL_TOPCODE$]
Lines=0
[EVT_COMMAND_SCROLL_TOPHELP$]
Lines=0
[EVT_SLIDER]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_SLIDERCODE$]
Lines=0
[EVT_SLIDERHELP$]
Lines=0
[EVT_UPDATE_UI]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[EVT_UPDATE_UICODE$]
Lines=0
[EVT_UPDATE_UIHELP$]
Lines=0
[FWx_EventList]
Descr=
DefaultCode=17
Keywords=
DataType=TStringList
Default=
Quote=0
Sc=10
IsObject=1
IsSubComponent=0
[FWx_EventListCODE$]
Lines=0
[FWx_EventListHELP$]
Lines=0
[FWx_PropertyList]
Descr=
DefaultCode=17
Keywords=
DataType=TStringList
Default=
Quote=0
Sc=10
IsObject=1
IsSubComponent=0
[FWx_PropertyListCODE$]
Lines=0
[FWx_PropertyListHELP$]
Lines=0
[GenerateControlIDs:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateControlIDs:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateControlIDs:StringCODE$]
Lines=10
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=~~~~~if (Wx_IDValue > 0) and (trim(Wx_IDName) <> '') then
L9=~~~~~~~~Result:=Format('#define %s %d ',[Wx_IDName,Wx_IDValue]);
L10=end;
[GenerateControlIDs:StringHELP$]
Lines=0
[GenerateEventTableEntries]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateEventTableEntries(CurrClassName:String):String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateEventTableEntriesCODE$]
Lines=60
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=
L9=~~~~~if trim(EVT_COMMAND_SCROLL) <> '' then
L10=~~~~~begin
L11=~~~~~~~~~~Result:=Format('EVT_COMMAND_SCROLL(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL]) +'';
L12=~~~~~end;
L13=
L14=~~~~~if trim(EVT_COMMAND_SCROLL_TOP) <> '' then
L15=~~~~~begin
L16=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_TOP(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_TOP]) +'';
L17=~~~~~end;
L18=~~~~~if trim(EVT_COMMAND_SCROLL_BOTTOM) <> '' then
L19=~~~~~begin
L20=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_BOTTOM(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_BOTTOM]) +'';
L21=~~~~~end;
L22=
L23=~~~~~if trim(EVT_COMMAND_SCROLL_LINEUP) <> '' then
L24=~~~~~begin
L25=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_LINEUP(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_LINEUP]) +'';
L26=~~~~~end;
L27=~~~~~if trim(EVT_COMMAND_SCROLL_LINEDOWN) <> '' then
L28=~~~~~begin
L29=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_LINEDOWN(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_LINEDOWN]) +'';
L30=~~~~~end;
L31=
L32=~~~~~if trim(EVT_COMMAND_SCROLL_PAGEUP) <> '' then
L33=~~~~~begin
L34=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_PAGEUP(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_PAGEUP]) +'';
L35=~~~~~end;
L36=~~~~~if trim(EVT_COMMAND_SCROLL_PAGEDOWN) <> '' then
L37=~~~~~begin
L38=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_PAGEDOWN(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_PAGEDOWN]) +'';
L39=~~~~~end;
L40=
L41=~~~~~if trim(EVT_COMMAND_SCROLL_THUMBTRACK) <> '' then
L42=~~~~~begin
L43=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_THUMBTRACK(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_THUMBTRACK]) +'';
L44=~~~~~end;
L45=~~~~~if trim(EVT_COMMAND_SCROLL_THUMBRELEASE) <> '' then
L46=~~~~~begin
L47=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_THUMBRELEASE(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_THUMBRELEASE]) +'';
L48=~~~~~end;
L49=
L50=~~~~~if trim(EVT_COMMAND_SCROLL_ENDSCROLL) <> '' then
L51=~~~~~begin
L52=~~~~~~~~~~Result:=Result+#13+Format('EVT_COMMAND_SCROLL_ENDSCROLL(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_COMMAND_SCROLL_ENDSCROLL]) +'';
L53=~~~~~end;
L54=
L55=~~~~~if trim(EVT_UPDATE_UI) <> '' then
L56=~~~~~begin
L57=~~~~~~~~~~Result:=Result+#13+Format('EVT_UPDATE_UI(%s,%s::%s)',[WX_IDName,CurrClassName,EVT_UPDATE_UI]) +'';
L58=~~~~~end;
L59=
L60=end;
[GenerateEventTableEntriesHELP$]
Lines=0
[GenerateGUIControlCreation:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateGUIControlCreation:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateGUIControlCreation:StringCODE$]
Lines=44
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~var
L5=~~~~~strStyle,parentName,strAlignment:String;
L6=begin
L7=~~~~~Result:='';
L8=
L9=~~~~if (self.Parent is TForm) or (self.Parent is TWxSizerPanel) then
L10=~~~~~~~parentName:='this'
L11=~~~~else
L12=~~~~~~~parentName:=self.Parent.name;
L13=
L14=~~~~strStyle:=GetSliderSpecificStyle(self.Wx_GeneralStyle,Wx_SliderStyle);
L15=
L16=~~~~Result:=Format('%s =  new %s(%s, %s,%d,%d,%d,wxPoint(%d,%d),wxSize(%d,%d) %s);',[self.Name,self.wx_Class,parentName,GetWxIDString(self.Wx_IDName,self.Wx_IDValue),self.position,self.Min,self.Max,self.Left,self.Top,self.width,self.Height,strStyle] );
L17=
L18=~~~~if trim(self.Wx_ToolTip) <> '' then
L19=~~~~~~~~Result:=Result + #13+Format('%s->SetToolTip(wxT("%s"));',[self.Name,self.Wx_ToolTip]);
L20=
L21=~~~~if self.Wx_Hidden then
L22=~~~~~~~~Result:=Result + #13+Format('%s->Show(false);',[self.Name]);
L23=
L24=~~~~if not Wx_Enabled then
L25=~~~~~~~~Result:=Result + #13+Format('%s->Enable(false);',[self.Name]);
L26=
L27=~~~~if trim(self.Wx_HelpText) <> '' then
L28=~~~~~~~~Result:=Result +#13+Format('%s->SetHelpText(_("%s"));',[self.Name,self.Wx_HelpText]);
L29=
L30=~~~Result:=Result +#13+Format('%s->SetRange(%d,%d);',[self.Name,self.Min,self.Max]);
L31=~~~Result:=Result +#13+Format('%s->SetValue(%d);',[self.Name,self.Position]);
L32=~~~~if(self.Parent is TWxSizerPanel) then
L33=~~~~begin
L34=~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_HorizontalAlignment) + ' | '+ SizerAlignmentToStr(Wx_VerticalAlignment) +' | wxALL';
L35=~~~~~~~~if wx_ControlOrientation = wxControlVertical then
L36=~~~~~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_HorizontalAlignment)+ ' | wxALL';
L37=
L38=~~~~~~~~~if wx_ControlOrientation = wxControlHorizontal then
L39=~~~~~~~~~~~~~strAlignment:=SizerAlignmentToStr(Wx_VerticalAlignment)+ ' | wxALL';
L40=
L41=
L42=~~~~~~~~~Result:=Result +#13+Format('%s->Add(%s,%d,%s,%d);',[self.Parent.Name,self.Name,self.Wx_StrechFactor,strAlignment,self.Wx_Border]);
L43=~~~~end;
L44=end;
[GenerateGUIControlCreation:StringHELP$]
Lines=0
[GenerateGUIControlDeclaration:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateGUIControlDeclaration:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateGUIControlDeclaration:StringCODE$]
Lines=9
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=~~~~~Result:=Format('%s *%s;',[trim(Self.Wx_Class),trim(Self.Name)]);
L9=end;
[GenerateGUIControlDeclaration:StringHELP$]
Lines=0
[GenerateHeaderInclude:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateHeaderInclude:String
S=0
Ov=0
Mode=2
WinMessage=
[GenerateHeaderInclude:StringCODE$]
Lines=9
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:='';
L8=Result:='#include <wx/slider.h>';
L9=end;
[GenerateHeaderInclude:StringHELP$]
Lines=0
[GenerateImageInclude:]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GenerateImageInclude: string
S=0
Ov=0
Mode=2
WinMessage=
[GenerateImageInclude:CODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=
L8=end;
[GenerateImageInclude:HELP$]
Lines=0
[GetEventList:TStringlist]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetEventList:TStringlist
S=0
Ov=0
Mode=2
WinMessage=
[GetEventList:TStringlistCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=FWx_EventList;
L8=end;
[GetEventList:TStringlistHELP$]
Lines=0
[GetIDName:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetIDName:String
S=0
Ov=0
Mode=2
WinMessage=
[GetIDName:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_IDName;
L8=end;
[GetIDName:StringHELP$]
Lines=0
[GetIDValue:LongInt]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetIDValue:LongInt
S=0
Ov=0
Mode=2
WinMessage=
[GetIDValue:LongIntCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_IDValue;
L8=end;
[GetIDValue:LongIntHELP$]
Lines=0
[GetParameterFromEventName]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetParameterFromEventName(EventName: string):String
S=0
Ov=0
Mode=2
WinMessage=
[GetParameterFromEventNameCODE$]
Lines=69
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=if EventName = 'EVT_SLIDER' then
L8=begin
L9=~Result:='wxScrollEvent& event';
L10=~exit;
L11=end;
L12=
L13=if EventName = 'EVT_COMMAND_SCROLL' then
L14=begin
L15=~Result:='wxScrollEvent& event';
L16=~exit;
L17=end;
L18=
L19=if EventName = 'EVT_COMMAND_SCROLL_TOP' then
L20=begin
L21=~Result:='wxScrollEvent& event';
L22=~exit;
L23=end;
L24=if EventName = 'EVT_COMMAND_SCROLL_BOTTOM' then
L25=begin
L26=~Result:='wxScrollEvent& event';
L27=~exit;
L28=end;
L29=if EventName = 'EVT_COMMAND_SCROLL_LINEUP' then
L30=begin
L31=~Result:='wxScrollEvent& event';
L32=~exit;
L33=end;
L34=if EventName = 'EVT_COMMAND_SCROLL_LINEDOWN' then
L35=begin
L36=~Result:='wxScrollEvent& event';
L37=~exit;
L38=end;
L39=if EventName = 'EVT_COMMAND_SCROLL_PAGEUP' then
L40=begin
L41=~Result:='wxScrollEvent& event';
L42=~exit;
L43=end;
L44=if EventName = 'EVT_COMMAND_SCROLL_PAGEDOWN' then
L45=begin
L46=~Result:='wxScrollEvent& event';
L47=~exit;
L48=end;
L49=if EventName = 'EVT_COMMAND_SCROLL_THUMBTRACK' then
L50=begin
L51=~Result:='wxScrollEvent& event';
L52=~exit;
L53=end;
L54=if EventName = 'EVT_COMMAND_SCROLL_THUMBRELEASE' then
L55=begin
L56=~Result:='wxScrollEvent& event';
L57=~exit;
L58=end;
L59=if EventName = 'EVT_COMMAND_SCROLL_ENDSCROLL' then
L60=begin
L61=~Result:='wxScrollEvent& event';
L62=~exit;
L63=end;
L64=if EventName = 'EVT_UPDATE_UI' then
L65=begin
L66=~Result:='wxUpdateUIEvent& event';
L67=~exit;
L68=end;
L69=end;
[GetParameterFromEventNameHELP$]
Lines=0
[GetPropertyList:TStringList]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetPropertyList:TStringList
S=0
Ov=0
Mode=2
WinMessage=
[GetPropertyList:TStringListCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=FWx_PropertyList;
L8=end;
[GetPropertyList:TStringListHELP$]
Lines=0
[GetTypeFromEventName]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetTypeFromEventName(EventName: string):string
S=0
Ov=0
Mode=2
WinMessage=
[GetTypeFromEventNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=
L8=end;
[GetTypeFromEventNameHELP$]
Lines=0
[GetWxClassName:String]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetWxClassName:String
S=0
Ov=0
Mode=2
WinMessage=
[GetWxClassName:StringCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Result:=wx_Class;
L8=end;
[GetWxClassName:StringHELP$]
Lines=0
[Loaded]
Descr=
DefaultCode=20
Keywords=
Kind=0
Header=Loaded
S=1
Ov=1
Mode=2
WinMessage=
[LoadedCODE$]
Lines=7
L1=begin
L2=~~~~~inherited Loaded;
L3=
L4=~~~~~{ Perform any component setup that depends on the property
L5=~~~~~~~values having been set }
L6=
L7=end;
[LoadedHELP$]
Lines=0
[OnKeyDown]
Descr=
DefaultCode=10
Keywords=
Ov=0
P=1
HandlerDecl=KeyDown(var Key: Word; Shift: TShiftState)
[OnKeyDownCODE$]
Lines=0
[OnKeyDownHELP$]
Lines=0
[OnKeyPress]
Descr=
DefaultCode=9
Keywords=
Ov=1
P=1
HandlerDecl=KeyPress(var Key : Char)
[OnKeyPressCODE$]
Lines=16
L1=const
L2=~~~~~TabKey = Char(VK_TAB);
L3=~~~~~EnterKey = Char(VK_RETURN);
L4=begin
L5=~~~~~{ Key contains the character produced by the keypress.
L6=~~~~~~~It can be tested or assigned a new value before the
L7=~~~~~~~call to the inherited KeyPress method.  Setting Key
L8=~~~~~~~to #0 before call to the inherited KeyPress method
L9=~~~~~~~terminates any further processing of the character. }
L10=
L11=~~~~~{ Activate KeyPress behavior of parent }
L12=~~~~~inherited KeyPress(Key);
L13=
L14=~~~~~{ Code to execute after KeyPress behavior of parent }
L15=
L16=end;
[OnKeyPressHELP$]
Lines=0
[OnKeyUp]
Descr=
DefaultCode=13
Keywords=
Ov=0
P=1
HandlerDecl=KeyUp(var Key: Word; Shift: TShiftState)
[OnKeyUpCODE$]
Lines=0
[OnKeyUpHELP$]
Lines=0
[SaveControlOrientation]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SaveControlOrientation(ControlOrientation:TWxControlOrientation)
S=0
Ov=0
Mode=2
WinMessage=
[SaveControlOrientationCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_ControlOrientation:=ControlOrientation;
L8=end;
[SaveControlOrientationHELP$]
Lines=0
[SetIDName]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetIDName(IDName:String)
S=0
Ov=0
Mode=2
WinMessage=
[SetIDNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_IDName:=IDName;
L8=end;
[SetIDNameHELP$]
Lines=0
[SetIDValue]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetIDValue(IDValue:longInt)
S=0
Ov=0
Mode=2
WinMessage=
[SetIDValueCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~Wx_IDValue:=IDVAlue;
L8=end;
[SetIDValueHELP$]
Lines=0
[SetWxClassName]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetWxClassName(wxClassName:String)
S=0
Ov=0
Mode=2
WinMessage=
[SetWxClassNameCODE$]
Lines=8
L1=~~~~~{ Internal declarations for method }
L2=~~~~~{ type }
L3=~~~~~{ . . . }
L4=~~~~~{ var }
L5=~~~~~{ . . . }
L6=begin
L7=~~~~~wx_Class:=wxClassName;
L8=end;
[SetWxClassNameHELP$]
Lines=0
[Wx_BGColor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TColor
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_BGColorCODE$]
Lines=0
[Wx_BGColorHELP$]
Lines=0
[Wx_Border]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=5
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_BorderCODE$]
Lines=0
[Wx_BorderHELP$]
Lines=0
[Wx_Class]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault='wxSlider'
Quote=1
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ClassCODE$]
Lines=0
[Wx_ClassHELP$]
Lines=0
[Wx_ControlOrientation]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxControlOrientation
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ControlOrientationCODE$]
Lines=0
[Wx_ControlOrientationHELP$]
Lines=0
[Wx_Enabled]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=True
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_EnabledCODE$]
Lines=0
[Wx_EnabledHELP$]
Lines=0
[Wx_FGColor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TColor
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_FGColorCODE$]
Lines=0
[Wx_FGColorHELP$]
Lines=0
[Wx_GeneralStyle]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxStdStyleSet
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_GeneralStyleCODE$]
Lines=0
[Wx_GeneralStyleHELP$]
Lines=0
[Wx_HelpText]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HelpTextCODE$]
Lines=0
[Wx_HelpTextHELP$]
Lines=0
[Wx_Hidden]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Boolean
PropDefault=False
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HiddenCODE$]
Lines=0
[Wx_HiddenHELP$]
Lines=0
[Wx_HorizontalAlignment]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxSizerHorizontalAlignment
PropDefault=wxSZALIGN_CENTER_HORIZONTAL
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_HorizontalAlignmentCODE$]
Lines=0
[Wx_HorizontalAlignmentHELP$]
Lines=0
[Wx_IDName]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_IDNameCODE$]
Lines=0
[Wx_IDNameHELP$]
Lines=0
[Wx_IDValue]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Longint
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_IDValueCODE$]
Lines=0
[Wx_IDValueHELP$]
Lines=0
[Wx_SliderStyle]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxsldrStyleSet
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_SliderStyleCODE$]
Lines=0
[Wx_SliderStyleHELP$]
Lines=0
[Wx_StrechFactor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_StrechFactorCODE$]
Lines=0
[Wx_StrechFactorHELP$]
Lines=0
[Wx_ToolTip]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=String
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ToolTipCODE$]
Lines=0
[Wx_ToolTipHELP$]
Lines=0
[Wx_VerticalAlignment]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxSizerVerticalAlignment
PropDefault=wxSZALIGN_CENTER_VERTICAL
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_VerticalAlignmentCODE$]
Lines=0
[Wx_VerticalAlignmentHELP$]
Lines=0
[Wx_ProxyBGColorString]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxColorString
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ProxyBGColorStringCODE$]
Lines=0
[Wx_ProxyBGColorStringHELP$]
Lines=0
[Wx_ProxyFGColorString]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=TWxColorString
PropDefault=
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_ProxyFGColorStringCODE$]
Lines=0
[Wx_ProxyFGColorStringHELP$]
Lines=0
[Wx_StretchFactor]
Descr=
DefaultCode=6
Keywords=
IN=0
RO=0
PropType=Integer
PropDefault=0
Quote=0
RM=0
WM=0
VIRT=0
Hide=0
SP=0
DefEdit=1
All=0
EC=
EU=
Link=
[Wx_StretchFactorCODE$]
Lines=0
[Wx_StretchFactorHELP$]
Lines=0
[GetStretchFactor:integer;]
Descr=
DefaultCode=0
Keywords=
Kind=1
Header=GetStretchFactor:integer;
S=0
Ov=0
Mode=2
WinMessage=
[GetStretchFactor:integer;CODE$]
Lines=0
[GetStretchFactor:integer;HELP$]
Lines=0
[SetStretchFactor]
Descr=
DefaultCode=0
Keywords=
Kind=0
Header=SetStretchFactor(intValue:Integer);
S=0
Ov=0
Mode=2
WinMessage=
[SetStretchFactorCODE$]
Lines=0
[SetStretchFactorHELP$]
Lines=0
