// $Id$
//

unit wxFindReplaceDialog;

interface

uses
  Windows, Messages, SysUtils, Classes,wxUtils,WxNonVisibleBaseComponent;

type
  TWxFindReplaceDialog = class(TWxNonVisibleBaseComponent,IWxComponentInterface)
  private
    { Private declarations }
        FWx_Class : String;
        FWx_PropertyList : TStringList;
        FWx_FindString: String;
        FWx_ReplaceString: String;
        FWx_Title: String;
        FWx_Flags:TWxFindReplaceFlagSet;
        FWx_Styles:TwxFindReplaceDialogStyleSet;

        procedure AutoInitialize;
        procedure AutoDestroy;

  protected

  public
        constructor Create(AOwner: TComponent); override;
        destructor Destroy; override;
        function GenerateControlIDs:String;
        function GenerateEnumControlIDs:String;
        function GenerateEventTableEntries(CurrClassName:String):String;
        function GenerateGUIControlCreation:String;
        function GenerateGUIControlDeclaration:String;
        function GenerateHeaderInclude:String;
        function GenerateImageInclude: string;
        function GetEventList:TStringlist;
        function GetIDName:String;
        function GetIDValue:LongInt;
        function GetParameterFromEventName(EventName: string):String;
        function GetPropertyList:TStringList;
        function GetStretchFactor:Integer;
        function GetTypeFromEventName(EventName: string):string;
        function GetWxClassName:String;
        procedure SaveControlOrientation(ControlOrientation:TWxControlOrientation);
        procedure SetIDName(IDName:String);
        procedure SetIDValue(IDValue:longInt);
        procedure SetStretchFactor(intValue:Integer);
        procedure SetWxClassName(wxClassName:String);
        function GetFGColor:string;
        procedure SetFGColor(strValue:String);
        function GetBGColor:string;
        procedure SetBGColor(strValue:String);
        procedure SetProxyFGColorString(value:String);
        procedure SetProxyBGColorString(value:String);
  published
    { Published declarations }
        property Wx_Class : String read FWx_Class write FWx_Class;
        property Wx_FindString :string read FWx_FindString write FWx_FindString;
        property Wx_ReplaceString  :string read FWx_ReplaceString write FWx_ReplaceString;
        property Wx_Title  :string read FWx_Title write FWx_Title;
        property Wx_Flags :TWxFindReplaceFlagSet read FWx_Flags write FWx_Flags ;
        property Wx_Styles :TwxFindReplaceDialogStyleSet read FWx_Styles write FWx_Styles;
    end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('wxWidgets', [TWxFindReplaceDialog]);
end;

{ Method to set variable and property values and create objects }
procedure TWxFindReplaceDialog.AutoInitialize;
begin
     FWx_PropertyList := TStringList.Create;
     FWx_Class := 'wxFindReplaceDialog';
     Glyph.Handle:=LoadBitmap(hInstance, 'TWxFindReplaceDialog');

end; { of AutoInitialize }

{ Method to free any objects created by AutoInitialize }
procedure TWxFindReplaceDialog.AutoDestroy;
begin
     FWx_PropertyList.Free;
end; { of AutoDestroy }

constructor TWxFindReplaceDialog.Create(AOwner: TComponent);
begin
     { Call the Create method of the container's parent class       }
     inherited Create(AOwner);

     { AutoInitialize sets the initial values of variables          }
     { (including subcomponent variables) and properties;           }
     { also, it creates objects for properties of standard          }
     { Delphi object types (e.g., TFont, TTimer, TPicture)          }
     { and for any variables marked as objects.                     }
     { AutoInitialize method is generated by Component Create.      }
     AutoInitialize;

     { Code to perform other tasks when the component is created }
     { Code to perform other tasks when the component is created }
     FWx_PropertyList.add('Wx_Flags:Flags');
     FWx_PropertyList.add('Wx_Styles:Styles');
     
     FWx_PropertyList.add('wxFR_DOWN:wxFR_DOWN');
     FWx_PropertyList.add('wxFR_WHOLEWORD:wxFR_WHOLEWORD');
     FWx_PropertyList.add('wxFR_MATCHCASE:wxFR_MATCHCASE');
     FWx_PropertyList.add('wxFR_REPLACEDIALOG:wxFR_REPLACEDIALOG');
     FWx_PropertyList.add('wxFR_NOUPDOWN:wxFR_NOUPDOWN');
     FWx_PropertyList.add('wxFR_NOMATCHCASE:wxFR_NOMATCHCASE');
     FWx_PropertyList.add('wxFR_NOWHOLEWORD:wxFR_NOWHOLEWORD');

     FWx_PropertyList.add('Wx_Message:Message');
     FWx_PropertyList.add('Name:Name');
     FWx_PropertyList.add('Wx_Class:Base Class');
     FWx_PropertyList.add('Wx_Title:Title');

     FWx_PropertyList.add('Wx_FindString:FindString');
     FWx_PropertyList.add('Wx_ReplaceString:ReplaceString');
end;

destructor TWxFindReplaceDialog.Destroy;
begin
     { AutoDestroy, which is generated by Component Create, frees any   }
     { objects created by AutoInitialize.                               }
     AutoDestroy;

     { Here, free any other dynamic objects that the component methods  }
     { created but have not yet freed.  Also perform any other clean-up }
     { operations needed before the component is destroyed.             }

     { Last, free the component by calling the Destroy method of the    }
     { parent class.                                                    }
     inherited Destroy;
end;

function TWxFindReplaceDialog.GenerateControlIDs:String;
begin
     Result:='';
end;

function TWxFindReplaceDialog.GenerateEnumControlIDs:String;
begin
     Result:='';
end;

function TWxFindReplaceDialog.GenerateEventTableEntries(CurrClassName:String):String;
begin
     Result:='';
end;

function TWxFindReplaceDialog.GenerateGUIControlCreation:String;
var
     strFlag,strStyle:String;

begin
     Result:='';
     strFlag:=GetFindReplaceFlagString(Wx_Flags);
     if strFlag = '' then
        strFlag:='0';
     Result:= self.Name+'_Data = new wxFindReplaceData('+strFlag+');' ;
    Result:=Result+#13+self.Name+'_Data->SetFindString('+GetCppString(Wx_FindString)+');';
    Result:=Result+#13+self.Name+'_Data->SetReplaceString('+GetCppString(Wx_ReplaceString)+');' ;

    strStyle:=GetFindReplaceDialogStyleString(Wx_Styles);
    if strStyle = '' then
        strStyle:=',0';

    Result:=Result+#13+Format('%s =  new %s(this, %s, %s %s);',[self.Name,self.wx_Class,self.Name+'_Data',GetCppString(Wx_Title),strStyle] );
    
end;

function TWxFindReplaceDialog.GenerateGUIControlDeclaration:String;
begin
     Result:='';
     Result:=Format('%s *%s;',[trim(Self.Wx_Class),trim(Self.Name)]);
     Result:=Result+#13+Format('wxFindReplaceData *%s_Data;',[trim(Self.Name)]);
end;

function TWxFindReplaceDialog.GenerateHeaderInclude:String;
begin
     Result:='';
     Result:='#include <wx/fdrepdlg.h>';
end;

function TWxFindReplaceDialog.GenerateImageInclude: string;
begin

end;

function TWxFindReplaceDialog.GetEventList:TStringlist;
begin
Result:=nil;
end;

function TWxFindReplaceDialog.GetIDName:String;
begin

end;

function TWxFindReplaceDialog.GetIDValue:LongInt;
begin
    Result :=0;
end;

function TWxFindReplaceDialog.GetParameterFromEventName(EventName: string):String;
begin

end;

function TWxFindReplaceDialog.GetStretchFactor:Integer;
begin
//
end;

function TWxFindReplaceDialog.GetPropertyList:TStringList;
begin
     Result:=FWx_PropertyList;
end;

function TWxFindReplaceDialog.GetTypeFromEventName(EventName: string):string;
begin

end;

function TWxFindReplaceDialog.GetWxClassName:String;
begin
     if trim(wx_Class) = '' then
        wx_Class:='wxFindReplaceDialog';
     Result:=wx_Class;
end;

procedure TWxFindReplaceDialog.SaveControlOrientation(ControlOrientation:TWxControlOrientation);
begin
    //
end;

procedure TWxFindReplaceDialog.SetIDName(IDName:String);
begin

end;

procedure TWxFindReplaceDialog.SetIDValue(IDValue:longInt);
begin

end;

procedure TWxFindReplaceDialog.SetStretchFactor(intValue:Integer);
begin
end;

procedure TWxFindReplaceDialog.SetWxClassName(wxClassName:String);
begin
     wx_Class:=wxClassName;
end;

function TWxFindReplaceDialog.GetFGColor:string;
begin

end;

procedure TWxFindReplaceDialog.SetFGColor(strValue:String);
begin
end;
    
function TWxFindReplaceDialog.GetBGColor:string;
begin
end;

procedure TWxFindReplaceDialog.SetBGColor(strValue:String);
begin
end;
procedure TWxFindReplaceDialog.SetProxyFGColorString(value:String);
begin
end;

procedure TWxFindReplaceDialog.SetProxyBGColorString(value:String);
begin
end;

end.
 
