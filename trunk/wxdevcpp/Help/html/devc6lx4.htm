<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Overview of C</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<P><A NAME="topic58"></A><SUP></SUP>Overview of C </P>

<P>Objectives:</P>

<P>This section is designed to give you a general overview of the C programming language. Although much of this section will be expanded in later sections it gives you</P>

<P>a taste of what is to come.</P>

<P>Why use C?:</P>

<P>C has been used successfully for every type of programming problem imaginable from operating systems to spreadsheets to expert systems - and efficient compilers are available for</P>

<P>machines ranging in power from the Apple Macintosh to the Cray supercomputers. The largest measure of C's success seems to be based on purely practical considerations:</P>

<P>the portability of the compiler; </P>

<P>the standard library concept; </P>

<P>a powerful and varied repertoire of operators; </P>

<P>an elegant syntax; </P>

<P>ready access to the hardware when needed; </P>

<P>and the ease with which applications can be optimized by hand-coding isolated procedures </P>

<P>C is often called a "Middle Level" programming language. This is not a reflection on its lack of programming power but more a reflection on its capability to access</P>

<P>the system's low level functions. Most high-level languages (e.g. Fortran) provides everything the programmer might want to do already built into the language. A low</P>

<P>level language (e.g. assembler) provides nothing other than access to the machines basic instruction set. A middle level language, such as C, probably doesn't supply</P>

<P>all the constructs found in high-languages - but it provides you with all the building blocks that you will need to produce the results you want! </P>

<P>Uses of C</P>

<P>C was initially used for system development work, in particular the programs that make-up the operating system. Why use C? Mainly because it produces code that runs nearly as fast as</P>

<P>code written in assembly language. Some examples of the use of C might be:</P>

<P>Operating Systems </P>

<P>Language Compilers </P>

<P>Assemblers </P>

<P>Text Editors </P>

<P>Print Spoolers </P>

<P>Network Drivers </P>

<P>Modern Programs </P>

<P>Data Bases </P>

<P>Language Interpreters </P>

<P>Utilities </P>

<P>In recent years C has been used as a general-purpose language because of its popularity with programmers. It is not the world's easiest language to learn and you</P>

<P>will certainly benifit if you are not learning C as your first programming language! C is trendy (I nearly said sexy) - many well established programmers are switching to</P>

<P>C for all sorts of reasons, but mainly because of the portability that writing standard C programs can offer. </P>

<P>A Brief History of C:</P>

<P>C is a general-purpose language which has been closely associated with the UNIX operating system for which it was developed - since the system and most of the programs that run it are</P>

<P>written in C. </P>

<P>Many of the important ideas of C stem from the language BCPL, developed by Martin Richards. The influence of BCPL on C proceeded indirectly through the</P>

<P>language B, which was written by Ken Thompson in 1970 at Bell Labs, for the first UNIX system on a DEC PDP-7. BCPL and B are "typeless" languages whereas C</P>

<P>provides a variety of data types. </P>

<P>In 1972 Dennis Ritchie at Bell Labs writes C and in 1978 the publication of The C Programming Language by Kernighan &amp; Ritchie caused a revolution in the</P>

<P>computing world. </P>

<P>In 1983, the American National Standards Institute (ANSI) established a committee to provide a modern, comprehensive definition of C. The resulting definition, the</P>

<P>ANSI standard, or "ANSI C", was completed late 1988. </P>

<P>A Rough Guide to Programming Languages is available on-line for those of you that are interested. </P>

<P>C for Personal Computers:</P>

<P>With regards to personal computers Microsoft C for IBM (or clones) PC's. and Borlands C are seen to be the two most commonly used systems. However, the latest version of Microsoft</P>

<P>C is now considered to be the most powerful and efficient C compiler for personal computers.</P>

</BODY>
</HTML>
